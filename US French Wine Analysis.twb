<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0427.1803                               -->
<workbook original-version='18.1' source-build='2020.1.3 (20201.20.0427.1803)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Final' inline='true' name='federated.012mep01ndy5kd10zqy4q1p50h6w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1f9gx111b5bbcj1dtgjuk0rdlvtw'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.501984' measure-ordering='alphabetic' measure-percentage='0.498016' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='top_50_words (Final)' inline='true' name='federated.0qrx1kq0uow8j81en4yh8198xiyg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.16oqw9511zkgui1bdbnf20nd8pce'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.16oqw9511zkgui1bdbnf20nd8pce' name='top_50_words' table='[public].[top_50_words]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index - Sub Populations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Index - Sub Populations]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Index - Sub Populations</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>France or California</remote-name>
            <remote-type>130</remote-type>
            <local-name>[France or California]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>France or California</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Wine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Wine]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Type of Wine</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating Bucket</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rating Bucket]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Rating Bucket</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor </remote-name>
            <remote-type>130</remote-type>
            <local-name>[Descriptor ]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Descriptor </remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Descriptor Count]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Descriptor Count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> How Often Descriptor Appears </remote-name>
            <remote-type>5</remote-type>
            <local-name>[ How Often Descriptor Appears ]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias> How Often Descriptor Appears </remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='How Often Descriptor Appears' datatype='real' name='[ How Often Descriptor Appears ]' role='measure' type='quantitative' />
      <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.500821' measure-ordering='alphabetic' measure-percentage='0.499179' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Chards_Actual_Pred_subregion (Final)' inline='true' name='federated.0kze8cv0dv69ab16fbm0h03r7fxu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0806d0b084vt9y10do0m30hay7er'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0806d0b084vt9y10do0m30hay7er' name='Chards_Actual_Pred_subregion' table='[public].[Chards_Actual_Pred_subregion]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Chards_Actual_Pred_subregion]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Chards_Actual_Pred_subregion]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[Chards_Actual_Pred_subregion]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual_price]</local-name>
            <parent-name>[Chards_Actual_Pred_subregion]</parent-name>
            <remote-alias>actual_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_price]</local-name>
            <parent-name>[Chards_Actual_Pred_subregion]</parent-name>
            <remote-alias>predicted_price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Predicted Price' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.412008' measure-ordering='alphabetic' measure-percentage='0.587992' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subregion:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beaujolais-Villages Blanc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand River Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mâcon-Burgy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mendocino County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Outer Coastal Plain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Coast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virginia&apos;s Eastern Shore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côtes du Jura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Limoux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mâcon-Pierreclos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint-Aubin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vin de Pays de Vaucluse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auxey-Duresses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chevalier-Montrachet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eagle Foothills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mâcon Chaintré&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mâcon-Villages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Coast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Savigny-lès-Beaune&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vin de Pays du Val de Loire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bourgogne Côtes d’Auxerre&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Côte Chalonnaise&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mâcon-Cruzille&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middleburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pernand-Vergelesses&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St.-Véran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Willamette Valley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beaune&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Valley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macon-Bussières&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercurey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pays d&apos;Oc&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southeastern New England&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vougeot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bâtard-Montrachet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chorey-lès-Beaune&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finger Lakes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mâcon La Roche Vineuse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mâcon-Vinzelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuits-St.-Georges&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shenandoah Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vin de Pays Vignobles de France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;California Other&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Côtes de Gascogne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Languedoc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mâcon-Milly Lamartine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Napa-Sonoma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puligny-Montrachet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vin de Pays de L&apos;Aude&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arbois&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chablis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Côtes du Lot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mâcon-Uchizy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New York Other&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint-Romain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vin de Pays des Côtes de Gascogne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bourgogne Vézelay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coteaux de l&apos;Auxois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mâcon-Loché&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montrachet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pouilly-Loché&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vin de Pays Cité de Carcassonne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beaujolais Blanc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cochise County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fixin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mâcon Solutré&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marsannay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Mission Peninsula&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Foothills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viré-Clessé&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bourgogne Grand Ordinaire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Côte de Beaune&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mâcon-Davayé&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montagny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Petit Chablis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yadkin Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bourgogne Hautes Côtes de Beaune&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coteaux Bourguignons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;L&apos;Étoile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mâcon-Fuissé&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monthélie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pouilly-Fuissé&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Val de Loire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Côtes d&apos;Auvergne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Michigan Shore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mâcon-Lugny&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pouilly-Vinzelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vin de Pays d&apos;Oc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Coast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Côtes de Nuits Villages&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leelanau Peninsula&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mâcon-Péronne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rully&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vin de Pays de la Haute Vallée de l’Aude&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bienvenues Bâtard-Montrachet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corton Vergennes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hautes Cotes de Beaune&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mâcon-Chardonnay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meursault&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pays de Loire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Oregon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaujolais-Villages&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Givry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mâcon-Azé&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mediterranée&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oregon Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ardèche&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charentais&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Côtes du Tarn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mâcon-Vergisson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint-Véran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vin de Pays des Portes de Méditerranée&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bourgogne Hautes Côtes de Nuits&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coteaux Champenois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ladoix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mâcon-Igé&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monticello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pouilly-Fumé&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vin de France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bourgogne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corton-Charlemagne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hautes Côtes de Nuits&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mâcon-Charnay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meursault-Blagny&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St.-Romain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Connecticut Highlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chassagne-Montrachet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Criots-Bâtard-Montrachet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mâcon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mâcon-Verze&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santenay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vin de Pays du Jardin de la France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Cab_Bords_Actual_Pred_region (Final)' inline='true' name='federated.0g5dk7u0am8i8e1e4onot0kjauqv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1qn5k9f10u7iy8130wsba1b5nj5n'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1qn5k9f10u7iy8130wsba1b5nj5n' name='Cab_Bords_Actual_Pred_region' table='[public].[Cab_Bords_Actual_Pred_region]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_region]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_region]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_region]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual_price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_region]</parent-name>
            <remote-alias>actual_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_region]</parent-name>
            <remote-alias>predicted_price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Predicted Price' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.423077' measure-ordering='alphabetic' measure-percentage='0.576923' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Southwest France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bordeaux&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Loire Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Cab_Bords_Actual_Pred_subregion (Final)' inline='true' name='federated.0mf6i3l0872hv51b5al2i0w6jnfr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1t9slek09142am15unot80z12rog'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1t9slek09142am15unot80z12rog' name='Cab_Bords_Actual_Pred_subregion' table='[public].[Cab_Bords_Actual_Pred_subregion]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual_price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion]</parent-name>
            <remote-alias>actual_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion]</parent-name>
            <remote-alias>predicted_price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Predicted Price' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.414079' measure-ordering='alphabetic' measure-percentage='0.585921' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subregion:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bordeaux Côtes de Francs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Côtes de Duras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oregon Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anjou&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint-Estèphe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergerac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Côtes de Bergerac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Languedoc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sainte-Foy Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Côtes du Tarn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mendocino County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pécharmant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Texas High Plains&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bordeaux Rosé&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Côtes de Gascogne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lussac Saint-Émilion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Outer Coastal Plain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Coast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blaye Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leelanau Peninsula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Coast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shenandoah Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Castillon Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puisseguin Saint-Émilion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vin de Pays Var&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anjou Villages Brissac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint-Georges-Saint-Émilion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virginia&apos;s Eastern Shore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;California-Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fronsac&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montravel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Premieres Côtes de Blaye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vin de Pays de L&apos;Aude&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bordeaux&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Côtes de Bourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewis-Clark Valley (ID)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Foothills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cadillac Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eagle Foothills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middleburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Touraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cahors&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finger Lakes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montagne-Saint-Émilion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pessac-Léognan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vin de France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canon-Fronsac&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moulis-en-Médoc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Premieres Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vin de Pays des Coteaux de Peyriac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Coast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haut-Médoc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Napa-Sonoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint-Émilion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vin de Pays Vignobles de France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bordeaux Supérieur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côtes de Provence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Margaux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pauillac&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Oregon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bordeaux Clairet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Côtes de Castillon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Listrac-Médoc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Mission Peninsula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Snake River Valley (OR)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lake Michigan Shore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint-Julien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;California Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Francs Côtes de Bordeaux&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monticello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pomerol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vin de Pays d&apos;Oc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buzet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Côtes du Marmandais&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Médoc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pays d&apos;Oc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coteaux de Verdon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lalande de Pomerol&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sainte-Foy Bordeaux&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yadkin Valley&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CA_FR_CAB_Chard (Final)' inline='true' name='federated.04uy5ml1745xu51ero99v0x2awj4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1ah3j5q0dlukf81dgle061ono6tk'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1ah3j5q0dlukf81dgle061ono6tk' name='CA_FR_CAB_Chard' table='[public].[CA_FR_CAB_Chard]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>filename</remote-name>
            <remote-type>130</remote-type>
            <local-name>[filename]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>filename</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>record number 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[record number 1]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>record number 1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>record number 2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[record number 2]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>record number 2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country or state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country or state]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>country or state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grape</remote-name>
            <remote-type>130</remote-type>
            <local-name>[grape]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>grape</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating Bucket</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rating Bucket]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>Rating Bucket</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost per point</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost per point]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>cost per point</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region coordinates </remote-name>
            <remote-type>130</remote-type>
            <local-name>[region coordinates ]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region coordinates </remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[region latitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region latitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[region longitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region longitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion coordinates </remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion coordinates ]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion coordinates </remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion latitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion latitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion longitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion longitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varietal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[varietal]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>varietal</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vintage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[vintage]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>vintage</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
      <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Designation' datatype='string' name='[designation]' role='dimension' type='nominal' />
      <column caption='Filename' datatype='string' name='[filename]' role='dimension' type='nominal' />
      <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Record Number 1' datatype='integer' name='[record number 1]' role='measure' type='quantitative' />
      <column caption='Record Number 2' datatype='integer' name='[record number 2]' role='measure' type='quantitative' />
      <column caption='Region Coordinates' datatype='string' name='[region coordinates ]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Region Latitude' datatype='real' name='[region latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Region Longitude' datatype='real' name='[region longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Subregion Coordinates' datatype='string' name='[subregion coordinates ]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Subregion Latitude' datatype='real' name='[subregion latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Subregion Longitude' datatype='real' name='[subregion longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[subregion]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
      <column caption='Vintage' datatype='string' name='[vintage]' role='dimension' type='nominal' />
      <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
      <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
      <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Country Or State,Grape)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country or state:nk]' />
          <groupfilter function='level-members' level='[none:grape:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country Or State,Grape,Region)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country or state:nk]' />
          <groupfilter function='level-members' level='[none:grape:nk]' />
          <groupfilter function='level-members' level='[none:region:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.53663' measure-ordering='alphabetic' measure-percentage='0.46337' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subregion:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arroyo Grande Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bourgogne Grand Ordinaire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiles Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cotes de Bourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Francs Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lalande de Pomerol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mâcon-Chardonnay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malibu Coast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morey-Saint-Denis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paso Robles Willow Creek District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ramona Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Diego County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Foothills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinity County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York Mountain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adelaida District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blaye Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Castillon Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte Chalonnaise&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Howell Mountain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mâcon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mâcon-Prissé&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mokelumne River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Sonoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pouilly-Fuissé&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint-Georges-Saint-Émilion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Cruz Mountains&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St.-Romain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vin de Pays du Jardin de la France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anderson Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bordeaux Rosé&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chalone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coteaux de l&apos;Auxois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fair Play&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Knights Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mâcon-Azé&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mâcon-Verze&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monterey County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacheco Pass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Premieres Cotes de Blaye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sainte-Foy Bordeaux&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Ynez Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suisun Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Viré-Clessé&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bâtard-Montrachet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clear Lake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cotes du Lot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Green Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Listrac-Médoc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mâcon-Fuissé&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mediterranée&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mount Veeder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pernand-Vergelesses&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rockpile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Luis Obispo County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sonoma Coast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vin de Pays Cité de Carcassonne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arroyo Seco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bourgogne Hautes Cotes de Beaune&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chorey-lés-Beaune&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cotes de Castillon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fronsac&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Languedoc&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mâcon-Charnay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Margaux&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moulis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pauillac&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Red Hills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Francisco Bay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Pelona Valley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Val de Loire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yorkville Highlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antelope Valley of the California High Desert&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bordeaux Supérieur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charentais&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotes d&apos;Auvergne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fixin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;L&apos;Étoile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mâcon-Burgy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mâcon-Villages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monthélie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paicines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Premieres Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sainte-Foy Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santenay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vougeot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bennett Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carmel Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corton Vergennes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eagle Peak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hautes Cotes de Nuits&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mâcon-Péronne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meursault&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Coast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pomerol&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint-Émilion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Clara Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spring Mountain District&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vin de Pays des Cotes de Gascogne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alexander Valley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bordeaux&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Côte de Beaune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Dorado County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Humboldt County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mâcon Chaintré&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mâcon-Uchizy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montagne-Saint-Émilion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nuits-St.-Georges&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pouilly-Fumé&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint-Julien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Lucia Highlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St.-Véran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vin de Pays du Val de Loire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beaune&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calistoga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coombsville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dry Creek Valley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haut-Médoc&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Los Carneros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mâcon-Milly Lamartine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mendocino Ridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nevada County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pine Mountain-Cloverdale Peak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saddle Rock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Barbara-Monterey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sonoma Valley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vin de Pays de Vaucluse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arbois&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bourgogne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chassagne-Montrachet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cotes de Blaye&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Ross-Seaview&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ladoix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macon-Bussiéres&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mâcon-Vinzelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montrachet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paso Robles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puisseguin Saint-Émilion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Benito County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Savigny-lés-Beaune&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Temecula Valley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willow Creek&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaujolais Blanc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clements Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cotes du Tarn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guenoc Valley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Livermore Valley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mâcon-Igé&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Médoc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mt. Harlan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pessac-Léognan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rully&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Ysidro District&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sonoma County&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vin de Pays d&apos;Oc&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beaujolais-Villages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cadillac Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cole Ranch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Criots-Bâtard-Montrachet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hames Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mâcon-Loché&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Napa County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Petaluma Gap&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Russian River Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sonoma County-Lake County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vin de Pays de L&apos;Aude&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Lomond Mountain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canon-Fronsac&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dunnigan Hills&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hautes Cotes de Beaune&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Olivos District&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mâcon-Montbellet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mercurey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newton Canyon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Placer County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint-Aubin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Clara County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Coast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vin de Pays des Bouches du Rhône&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bienvenues Bâtard-Montrachet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carneros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Corton-Charlemagne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edna Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lussac Saint-Émilion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mâcon-Pierreclos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meursault-Blagny&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Yuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Potter Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint-Estéphe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Cruz County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vin de Pays des Portes de Méditerranée&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlas Peak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bourgogne Hautes Cotes de Nuits&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cienega Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cotes de Gascogne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Givry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Limoux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mâcon-Cruzille&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marin County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moulis-en-Médoc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pays d&apos;Oc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redwood Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Lucas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solano County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ventura County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yountville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ardèche&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bourgogne Cotes d’Auxerre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chevalier-Montrachet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cotes de Bordeaux&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fountaingrove District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lake County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mâcon-Chânes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moon Mountain District Sonoma County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paso Robles Highlands District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puligny-Montrachet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Bernabe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shenandoah Valley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Templeton Gap District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yolo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bordeaux Clairet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chablis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coteaux Bourguignons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Pomar District&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ile de Beauté&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mâcon La Roche Vineuse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macon-Verge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montagny&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oak Knoll District&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pouilly-Loché&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint-Romain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Margarita Ranch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sta. Rita Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vin de Pays Vignobles de France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beaujolais-Villages Blanc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calaveras County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Contra Costa County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Mountain District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Happy Canyon of Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Los Angeles County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mâcon-Lugny&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mendocino County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Napa Valley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Petit Chablis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sonoma Mountain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vin de Pays de la Haute Vallée de l’Aude&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Auxey-Duresses&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bourgogne Vézelay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clarksburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cotes de Nuits Villages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Listrac&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mâcon-Davayé&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marsannay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Harlan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pays de Loire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;River Junction&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vin de France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amador County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bordeaux Cotes de Francs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chalk Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coteaux Champenois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Entre-Deux-Mers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mâcon Solutré&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mâcon-Vergisson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pouilly-Vinzelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint-Véran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Maria Valley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stags Leap District&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vin de Table Francais&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:grape:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cabernet / Bordeaux Blend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chardonnay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Top 10 Common Words by Rating Buckets' inline='true' name='federated.0c5kvy61ixmedo1giline08ma4vy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Top 10 Common Words by Rating Buckets' name='textscan.1jbce981dlyn821fn2d620y1m6j9'>
            <connection class='textscan' directory='C:/Users/koegs/Desktop/DU Bootcamp/Projects/Final Project/Resources' filename='Top 50 Common Words by Rating Buckets.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1jbce981dlyn821fn2d620y1m6j9' name='Top 10 Common Words by Rating Buckets.csv' table='[Top 10 Common Words by Rating Buckets#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Index - Sub Populations' ordinal='0' />
            <column datatype='string' name='France or California' ordinal='1' />
            <column datatype='string' name='Type of Wine' ordinal='2' />
            <column datatype='string' name='Rating Bucket' ordinal='3' />
            <column datatype='string' name='Color' ordinal='4' />
            <column datatype='string' name='Descriptor ' ordinal='5' />
            <column datatype='integer' name='Descriptor Count' ordinal='6' />
            <column datatype='real' name='How Often Descriptor Appears ' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index - Sub Populations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Index - Sub Populations]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>Index - Sub Populations</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>France or California</remote-name>
            <remote-type>129</remote-type>
            <local-name>[France or California]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>France or California</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Wine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of Wine]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>Type of Wine</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating Bucket</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rating Bucket]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>Rating Bucket</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Descriptor ]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>Descriptor </remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Descriptor Count]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>Descriptor Count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How Often Descriptor Appears </remote-name>
            <remote-type>5</remote-type>
            <local-name>[How Often Descriptor Appears ]</local-name>
            <parent-name>[Top 10 Common Words by Rating Buckets.csv]</parent-name>
            <remote-alias>How Often Descriptor Appears </remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
      <column caption='How Often Descriptor Appears' datatype='real' name='[How Often Descriptor Appears ]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.520147' measure-ordering='alphabetic' measure-percentage='0.479853' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Descriptor :nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;currants&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;apple&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;buttered&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cherries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;richness&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;dense&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ripe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;tight&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cherry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;complex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;crisp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;concentrated&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;opulent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;balanced&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;blackberries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;powerful&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tannic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pineapple&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;structure&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;simple&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;firm&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mineral&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;soft&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;berry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;juicy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;minerality&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;light&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;oaky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;toast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;currant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fresh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;blackberry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;peach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fruity&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lemon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sweet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;intense&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;vanilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cassis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;citrus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Chards_Actual_Pred_region (Final)' inline='true' name='federated.1b2f37d06god1w101aoz50742sh7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0jcjhki02r9tt01e0zmlu1m1uy7w'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0jcjhki02r9tt01e0zmlu1m1uy7w' name='Chards_Actual_Pred_region' table='[public].[Chards_Actual_Pred_region]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Chards_Actual_Pred_region]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Chards_Actual_Pred_region]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Chards_Actual_Pred_region]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual_price]</local-name>
            <parent-name>[Chards_Actual_Pred_region]</parent-name>
            <remote-alias>actual_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_price]</local-name>
            <parent-name>[Chards_Actual_Pred_region]</parent-name>
            <remote-alias>predicted_price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted price]</local-name>
            <parent-name>[Chards_Actual_Pred_region]</parent-name>
            <remote-alias>predicted price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Predicted Price' datatype='real' name='[predicted price]' role='measure' type='quantitative' />
      <column caption='Predicted Price1' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.4' measure-ordering='alphabetic' measure-percentage='0.6' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Predictions(cab/chard)' inline='true' name='federated.0fqdx321g4yd8s14opldc1h1fuln' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1w3dkxs0dqud6o110gbxm0xtn50o'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Cab_Board_Predictions_subregion].[subregion]' />
              <expression op='[US_French_Chard+].[subregion]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Chard_Predictions_subregion+].[index]' />
                <expression op='[Cab_Board_Predictions_subregion].[index]' />
              </expression>
            </clause>
            <relation all='true' name='Chard_Predictions_subregion+' type='union'>
              <relation connection='postgres.1w3dkxs0dqud6o110gbxm0xtn50o' name='Chard_Predictions_subregion' table='[public].[Chard_Predictions_subregion]' type='table' />
            </relation>
            <relation connection='postgres.1w3dkxs0dqud6o110gbxm0xtn50o' name='Cab_Board_Predictions_subregion' table='[public].[Cab_Board_Predictions_subregion]' type='table' />
          </relation>
          <relation all='true' name='US_French_Chard+' type='union'>
            <relation connection='postgres.1w3dkxs0dqud6o110gbxm0xtn50o' name='US_French_Chard' table='[public].[US_French_Chard]' type='table' />
            <relation connection='postgres.1w3dkxs0dqud6o110gbxm0xtn50o' name='US_French_Cabernet' table='[public].[US_French_Cabernet]' type='table' />
          </relation>
        </relation>
        <cols>
          <map key='[ID]' value='[US_French_Chard+].[ID]' />
          <map key='[Table Name (US_French_Chard+)]' value='[US_French_Chard+].[Table Name]' />
          <map key='[Table Name]' value='[Chard_Predictions_subregion+].[Table Name]' />
          <map key='[alcohol]' value='[US_French_Chard+].[alcohol]' />
          <map key='[category]' value='[US_French_Chard+].[category]' />
          <map key='[country]' value='[US_French_Chard+].[country]' />
          <map key='[description]' value='[US_French_Chard+].[description]' />
          <map key='[designation]' value='[US_French_Chard+].[designation]' />
          <map key='[index (Cab_Board_Predictions_subregion)]' value='[Cab_Board_Predictions_subregion].[index]' />
          <map key='[index (US_French_Chard+)]' value='[US_French_Chard+].[index]' />
          <map key='[index]' value='[Chard_Predictions_subregion+].[index]' />
          <map key='[predicted_ (Cab_Board_Predictions_subregion)]' value='[Cab_Board_Predictions_subregion].[predicted_]' />
          <map key='[predicted_]' value='[Chard_Predictions_subregion+].[predicted_]' />
          <map key='[price]' value='[US_French_Chard+].[price]' />
          <map key='[price_bin]' value='[US_French_Chard+].[price_bin]' />
          <map key='[price_bins]' value='[US_French_Chard+].[price_bins]' />
          <map key='[rating (Cab_Board_Predictions_subregion)]' value='[Cab_Board_Predictions_subregion].[rating]' />
          <map key='[rating (US_French_Chard+)]' value='[US_French_Chard+].[rating]' />
          <map key='[rating]' value='[Chard_Predictions_subregion+].[rating]' />
          <map key='[rating_bin]' value='[US_French_Chard+].[rating_bin]' />
          <map key='[region]' value='[US_French_Chard+].[region]' />
          <map key='[subregion (Cab_Board_Predictions_subregion)]' value='[Cab_Board_Predictions_subregion].[subregion]' />
          <map key='[subregion (US_French_Chard+)]' value='[US_French_Chard+].[subregion]' />
          <map key='[subregion]' value='[Chard_Predictions_subregion+].[subregion]' />
          <map key='[subsubregion]' value='[US_French_Chard+].[subsubregion]' />
          <map key='[title]' value='[US_French_Chard+].[title]' />
          <map key='[url]' value='[US_French_Chard+].[url]' />
          <map key='[varietal]' value='[US_French_Chard+].[varietal]' />
          <map key='[vintage]' value='[US_French_Chard+].[vintage]' />
          <map key='[winery]' value='[US_French_Chard+].[winery]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Chard_Predictions_subregion+]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Chard_Predictions_subregion+]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[Chard_Predictions_subregion+]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_]</local-name>
            <parent-name>[Chard_Predictions_subregion+]</parent-name>
            <remote-alias>predicted_</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Chard_Predictions_subregion+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index (Cab_Board_Predictions_subregion)]</local-name>
            <parent-name>[Cab_Board_Predictions_subregion]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating (Cab_Board_Predictions_subregion)]</local-name>
            <parent-name>[Cab_Board_Predictions_subregion]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion (Cab_Board_Predictions_subregion)]</local-name>
            <parent-name>[Cab_Board_Predictions_subregion]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_ (Cab_Board_Predictions_subregion)]</local-name>
            <parent-name>[Cab_Board_Predictions_subregion]</parent-name>
            <remote-alias>predicted_</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index (US_French_Chard+)]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_bins</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_bins]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>price_bins</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating (US_French_Chard+)]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating_bin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rating_bin]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>rating_bin</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion (US_French_Chard+)]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsubregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subsubregion]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>subsubregion</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varietal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[varietal]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>varietal</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vintage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vintage]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>vintage</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_bin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_bin]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>price_bin</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name (US_French_Chard+)]</local-name>
            <parent-name>[US_French_Chard+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Designation' datatype='string' name='[designation]' role='dimension' type='nominal' />
      <column caption='index (Cab Board Predictions subregion)' datatype='integer' name='[index (Cab_Board_Predictions_subregion)]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='predicted  (Cab Board Predictions subregion)' datatype='real' name='[predicted_ (Cab_Board_Predictions_subregion)]' role='measure' type='quantitative' />
      <column caption='Predicted' datatype='real' name='[predicted_]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Price Bins' datatype='string' name='[price_bins]' role='dimension' type='nominal' />
      <column caption='rating (Cab Board Predictions subregion)' datatype='integer' name='[rating (Cab_Board_Predictions_subregion)]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Rating Bin' datatype='string' name='[rating_bin]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='subregion (Cab Board Predictions subregion)' datatype='string' name='[subregion (Cab_Board_Predictions_subregion)]' role='dimension' type='nominal' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <column caption='Subsubregion' datatype='string' name='[subsubregion]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
      <column caption='Vintage' datatype='integer' name='[vintage]' role='measure' type='quantitative' />
      <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
      <drill-paths>
        <drill-path name='country, State / Country'>
          <field>[country]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.305861' measure-ordering='alphabetic' measure-percentage='0.694139' rowDisplayCount='1000000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Chards_Actual_Pred_region_test' inline='true' name='federated.18seyvo04apus81g89e9f10ap40d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Chards_Actual_Pred_region_test' name='textscan.0tqnrbh0l8ozoo1czi4dt132gdhk'>
            <connection class='textscan' directory='C:/Users/koegs/Desktop/DU Bootcamp/Projects/Final Project' filename='Chards_Actual_Pred_region_test.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Predicted Price' datatype='real' name='[predicted price]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501984' measure-ordering='alphabetic' measure-percentage='0.498016' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Cab_Bords_Actual_Pred_subregion_test' inline='true' name='federated.1jx1zjn1xcrfoa1cdm9ms127pytr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cab_Bords_Actual_Pred_subregion_test' name='textscan.0gzi8i5124viky1bs3s740n4wyys'>
            <connection class='textscan' directory='C:/Users/koegs/Desktop/DU Bootcamp/Projects/Final Project' filename='Cab_Bords_Actual_Pred_subregion_test.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0gzi8i5124viky1bs3s740n4wyys' name='Cab_Bords_Actual_Pred_subregion_test.csv' table='[Cab_Bords_Actual_Pred_subregion_test#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='price' ordinal='0' />
            <column datatype='integer' name='rating' ordinal='1' />
            <column datatype='string' name='subregion' ordinal='2' />
            <column datatype='real' name='predicted price' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>predicted price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Predicted Price' datatype='real' name='[predicted price]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434783' measure-ordering='alphabetic' measure-percentage='0.565217' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Cab_Bords_Actual_Pred_subregion_test (2)' inline='true' name='federated.0w6puzb13gldvh141jp54026x22j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cab_Bords_Actual_Pred_subregion_test' name='textscan.0g326du1imdvl41d13ih11dbr9lg'>
            <connection class='textscan' directory='C:/Users/koegs/Desktop/DU Bootcamp/Projects/Final Project' filename='Cab_Bords_Actual_Pred_subregion_test.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0g326du1imdvl41d13ih11dbr9lg' name='Cab_Bords_Actual_Pred_subregion_test.csv' table='[Cab_Bords_Actual_Pred_subregion_test#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='price' ordinal='0' />
            <column datatype='integer' name='rating' ordinal='1' />
            <column datatype='string' name='subregion' ordinal='2' />
            <column datatype='real' name='predicted price' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted price]</local-name>
            <parent-name>[Cab_Bords_Actual_Pred_subregion_test.csv]</parent-name>
            <remote-alias>predicted price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Predicted Price' datatype='real' name='[predicted price]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434783' measure-ordering='alphabetic' measure-percentage='0.565217' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ActPred BordReg'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Predicted vs. Actual Price: Cabernet / Bordeaux by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cab_Bords_Actual_Pred_region (Final)' name='federated.0g5dk7u0am8i8e1e4onot0kjauqv' />
          </datasources>
          <datasource-dependencies datasource='federated.0g5dk7u0am8i8e1e4onot0kjauqv'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
            <column-instance column='[actual_price]' derivation='Avg' name='[avg:actual_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted_price]' derivation='Avg' name='[avg:predicted_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Predicted Price' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[sum:Number of Records:qk]' included-values='in-range'>
            <min>2</min>
            <max>11008</max>
          </filter>
          <slices>
            <column>[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[none:region:nk]' />
              <lod column='[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[sum:Number of Records:qk]' />
              <text column='[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[none:region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[avg:actual_price:qk]</rows>
        <cols>[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[avg:predicted_price:qk]</cols>
      </table>
      <simple-id uuid='{12F8977C-94DF-416F-9387-5BE48199252E}' />
    </worksheet>
    <worksheet name='ActPred ChardsSub'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Predicted vs. Actual Price - Chardonnays by Subregion&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Chards_Actual_Pred_subregion (Final)' name='federated.0kze8cv0dv69ab16fbm0h03r7fxu' />
          </datasources>
          <datasource-dependencies datasource='federated.0kze8cv0dv69ab16fbm0h03r7fxu'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
            <column-instance column='[actual_price]' derivation='Avg' name='[avg:actual_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted_price]' derivation='Avg' name='[avg:predicted_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
            <column caption='Predicted Price' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
            <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[sum:Number of Records:qk]' included-values='in-range'>
            <min>1</min>
            <max>2927</max>
          </filter>
          <slices>
            <column>[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[none:subregion:nk]' />
              <lod column='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[sum:Number of Records:qk]' />
              <text column='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[none:subregion:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[avg:actual_price:qk]</rows>
        <cols>[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[avg:predicted_price:qk]</cols>
      </table>
      <simple-id uuid='{DF056041-7D40-425E-8EDD-434CE9E1EBC8}' />
    </worksheet>
    <worksheet name='ActPredBordSub'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Predicted vs. Actual Price: Cabernet / Bordeauxs by Subregion</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cab_Bords_Actual_Pred_subregion (Final)' name='federated.0mf6i3l0872hv51b5al2i0w6jnfr' />
          </datasources>
          <datasource-dependencies datasource='federated.0mf6i3l0872hv51b5al2i0w6jnfr'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
            <column-instance column='[actual_price]' derivation='Avg' name='[avg:actual_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted_price]' derivation='Avg' name='[avg:predicted_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
            <column caption='Predicted Price' datatype='real' name='[predicted_price]' role='measure' type='quantitative' />
            <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[sum:Number of Records:qk]' included-values='in-range'>
            <min>1</min>
            <max>5956</max>
          </filter>
          <slices>
            <column>[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[none:subregion:nk]' />
              <lod column='[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[sum:Number of Records:qk]' />
              <text column='[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[none:subregion:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[avg:actual_price:qk]</rows>
        <cols>[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[avg:predicted_price:qk]</cols>
      </table>
      <simple-id uuid='{03661B15-74F4-44D3-B944-B3B02383CB94}' />
    </worksheet>
    <worksheet name='ActPredChardReg'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Predicted vs. Actual Price: Chardonnays by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Chards_Actual_Pred_region (Final)' name='federated.1b2f37d06god1w101aoz50742sh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1b2f37d06god1w101aoz50742sh7'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Actual Price' datatype='real' name='[actual_price]' role='measure' type='quantitative' />
            <column-instance column='[actual_price]' derivation='Avg' name='[avg:actual_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted price]' derivation='Avg' name='[avg:predicted price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Predicted Price' datatype='real' name='[predicted price]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b2f37d06god1w101aoz50742sh7].[sum:Number of Records:qk]' included-values='in-range'>
            <min>1</min>
            <max>8878</max>
          </filter>
          <slices>
            <column>[federated.1b2f37d06god1w101aoz50742sh7].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1b2f37d06god1w101aoz50742sh7].[none:region:nk]' />
              <lod column='[federated.1b2f37d06god1w101aoz50742sh7].[sum:Number of Records:qk]' />
              <text column='[federated.1b2f37d06god1w101aoz50742sh7].[none:region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b2f37d06god1w101aoz50742sh7].[avg:actual_price:qk]</rows>
        <cols>[federated.1b2f37d06god1w101aoz50742sh7].[avg:predicted price:qk]</cols>
      </table>
      <simple-id uuid='{B574ECB3-81D3-406F-81BD-3938E9BA42D4}' />
    </worksheet>
    <worksheet name='California Cabernet'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;Top 10 Descriptors on a Percentage Basis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 Common Words by Rating Buckets' name='federated.0c5kvy61ixmedo1giline08ma4vy' />
          </datasources>
          <datasource-dependencies datasource='federated.0c5kvy61ixmedo1giline08ma4vy'>
            <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
            <column caption='How Often Descriptor Appears' datatype='real' name='[How Often Descriptor Appears ]' role='measure' type='quantitative' />
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Wine]' role='dimension' type='nominal' />
            <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Wine]' derivation='None' name='[none:Type of Wine:nk]' pivot='key' type='nominal' />
            <column-instance column='[How Often Descriptor Appears ]' derivation='Sum' name='[sum:How Often Descriptor Appears :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;80-84 Points&quot;' />
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;95-100 Points&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;95-100 Points&quot;</bucket>
              <bucket>&quot;80-84 Points&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]'>
            <groupfilter function='member' level='[none:Type of Wine:nk]' member='&quot;California Cabernet&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</column>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' />
              <text column='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk] / [federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk])</rows>
        <cols>[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]</cols>
      </table>
      <simple-id uuid='{AC1AB9A0-C2C0-4FC6-AE30-F5891FE8AE77}' />
    </worksheet>
    <worksheet name='California Chardonnay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;Top 10 Descriptors on a Percentage Basis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 Common Words by Rating Buckets' name='federated.0c5kvy61ixmedo1giline08ma4vy' />
          </datasources>
          <datasource-dependencies datasource='federated.0c5kvy61ixmedo1giline08ma4vy'>
            <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
            <column caption='How Often Descriptor Appears' datatype='real' name='[How Often Descriptor Appears ]' role='measure' type='quantitative' />
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Wine]' role='dimension' type='nominal' />
            <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Wine]' derivation='None' name='[none:Type of Wine:nk]' pivot='key' type='nominal' />
            <column-instance column='[How Often Descriptor Appears ]' derivation='Sum' name='[sum:How Often Descriptor Appears :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;80-84 Points&quot;' />
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;95-100 Points&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;95-100 Points&quot;</bucket>
              <bucket>&quot;80-84 Points&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]'>
            <groupfilter function='member' level='[none:Type of Wine:nk]' member='&quot;California Chardonnay&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</column>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' />
              <text column='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk] / [federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk])</rows>
        <cols>[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]</cols>
      </table>
      <simple-id uuid='{C627AF63-2731-4A5E-B043-DB22B4BFF222}' />
    </worksheet>
    <worksheet name='French Chardonnay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;Top 10 Descriptors on a Percentage Basis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 Common Words by Rating Buckets' name='federated.0c5kvy61ixmedo1giline08ma4vy' />
          </datasources>
          <datasource-dependencies datasource='federated.0c5kvy61ixmedo1giline08ma4vy'>
            <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
            <column caption='How Often Descriptor Appears' datatype='real' name='[How Often Descriptor Appears ]' role='measure' type='quantitative' />
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Wine]' role='dimension' type='nominal' />
            <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Wine]' derivation='None' name='[none:Type of Wine:nk]' pivot='key' type='nominal' />
            <column-instance column='[How Often Descriptor Appears ]' derivation='Sum' name='[sum:How Often Descriptor Appears :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;80-84 Points&quot;' />
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;95-100 Points&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;95-100 Points&quot;</bucket>
              <bucket>&quot;80-84 Points&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]'>
            <groupfilter function='member' level='[none:Type of Wine:nk]' member='&quot;French Chardonnay&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</column>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' />
              <text column='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk] / [federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk])</rows>
        <cols>[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]</cols>
      </table>
      <simple-id uuid='{B5575DB7-F598-4BA4-801B-44ACEEFECA11}' />
    </worksheet>
    <worksheet name='French Red Bordeaux'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;Top 10 Descriptors on a Percentage Basis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 Common Words by Rating Buckets' name='federated.0c5kvy61ixmedo1giline08ma4vy' />
          </datasources>
          <datasource-dependencies datasource='federated.0c5kvy61ixmedo1giline08ma4vy'>
            <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
            <column caption='How Often Descriptor Appears' datatype='real' name='[How Often Descriptor Appears ]' role='measure' type='quantitative' />
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Wine]' role='dimension' type='nominal' />
            <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Wine]' derivation='None' name='[none:Type of Wine:nk]' pivot='key' type='nominal' />
            <column-instance column='[How Often Descriptor Appears ]' derivation='Sum' name='[sum:How Often Descriptor Appears :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;80-84 Points&quot;' />
              <groupfilter function='member' level='[none:Rating Bucket:nk]' member='&quot;95-100 Points&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;95-100 Points&quot;</bucket>
              <bucket>&quot;80-84 Points&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]'>
            <groupfilter function='member' level='[none:Type of Wine:nk]' member='&quot;Bordeaux Reds&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</column>
            <column>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' />
              <text column='[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk] / [federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk])</rows>
        <cols>[federated.0c5kvy61ixmedo1giline08ma4vy].[sum:How Often Descriptor Appears :qk]</cols>
      </table>
      <simple-id uuid='{6030D955-3212-401C-AFC0-C652DA200492}' />
    </worksheet>
    <worksheet name='Price vs Rating - Bordeaux by Subregion - Cabernet'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bordeaux by Subregion - Cabernet / Bordeaux Blends&#10;Average Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[subregion]' role='dimension' semantic-role='' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='member' level='[none:country or state:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Cabernet / Bordeaux Blend&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Bordeaux&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Bordeaux&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Bordeaux Supérieur&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Margaux&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Pauillac&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Pessac-Léognan&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Pomerol&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Saint-Émilion&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Saint-Estéphe&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Saint-Julien&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' value='88' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk])))</cols>
      </table>
      <simple-id uuid='{0587486E-4DD8-48EF-AC1E-AD426958E9E8}' />
    </worksheet>
    <worksheet name='Price vs Rating - California by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>California by Region - Cabernet&#10;Average: Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='member' level='[none:country or state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Cabernet / Bordeaux Blend&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Lake County&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Mendocino County&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Sierra Foothills&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;South Coast&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='136' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]))</cols>
      </table>
      <simple-id uuid='{6B966FAC-3587-40B6-A445-D515076BFD02}' />
    </worksheet>
    <worksheet name='Price vs Rating - California by Region (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Price vs Rating - California by Region - Chardonnay&#10;Average Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='member' level='[none:country or state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Lake County&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Mendocino County&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Sierra Foothills&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;South Coast&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='130' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55ff00</color>
                <color>#6ef829</color>
                <color>#86f250</color>
                <color>#9dec76</color>
                <color>#b2e599</color>
                <color>#c6dfba</color>
                <color>#d9d9d9</color>
                <color>#dfdfba</color>
                <color>#e5e599</color>
                <color>#ecec76</color>
                <color>#f2f250</color>
                <color>#f8f829</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]))</cols>
      </table>
      <simple-id uuid='{68E319E3-DD1B-4B96-B655-DFF7B0C0B679}' />
    </worksheet>
    <worksheet name='Price vs Rating - California vs France'>
      <layout-options>
        <title>
          <formatted-text>
            <run>California vs France - Cabernet / Bordeaux Blends&#10;Average: Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Cabernet / Bordeaux Blend&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='228' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk])</cols>
      </table>
      <simple-id uuid='{14D1A86C-FDA1-4755-8C7E-32F394BA7E11}' />
    </worksheet>
    <worksheet name='Price vs Rating - California vs France (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>California vs France - Chardonnay&#10;Average Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='160' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55ff7f</color>
                <color>#6ef890</color>
                <color>#86f2a1</color>
                <color>#9decb0</color>
                <color>#b2e5bf</color>
                <color>#c6dfcc</color>
                <color>#d9d9d9</color>
                <color>#dfdfba</color>
                <color>#e5e599</color>
                <color>#ecec76</color>
                <color>#f2f250</color>
                <color>#f8f829</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk])</cols>
      </table>
      <simple-id uuid='{C30559CC-12C2-48FD-A5D3-558D341B8EC1}' />
    </worksheet>
    <worksheet name='Price vs Rating - California vs France - Cabernet'>
      <layout-options>
        <title>
          <formatted-text>
            <run>California vs Bordeaux - Cabernet / Bordeaux Blends&#10;By Rating Bin&#10;Average: Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Cabernet / Bordeaux Blend&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]))</cols>
      </table>
      <simple-id uuid='{65A7BFA7-B214-4F06-9AC7-428F9E4CE234}' />
    </worksheet>
    <worksheet name='Price vs Rating - California vs France - Chardonnay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>California vs France - Chardonnay&#10;By Rating Bin&#10;Average Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55ff00</color>
                <color>#6ef829</color>
                <color>#86f250</color>
                <color>#9dec76</color>
                <color>#b2e599</color>
                <color>#c6dfba</color>
                <color>#d9d9d9</color>
                <color>#dfdfba</color>
                <color>#e5e599</color>
                <color>#ecec76</color>
                <color>#f2f250</color>
                <color>#f8f829</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]))</cols>
      </table>
      <simple-id uuid='{315B1F72-4971-40B5-AC13-3C70EA832B4D}' />
    </worksheet>
    <worksheet name='Price vs Rating - Chardonnay by Subregion - Chardonnay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>French Chardonnay by Region&#10;Average Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape,Region)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
                <groupfilter function='level-members' level='[none:region:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:country or state:nk]' member='&quot;France&quot;' />
                    <groupfilter function='member' level='[none:region:nk]' member='&quot;Champagne&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:country or state:nk]' />
                  <hierarchy name='[none:grape:nk]' />
                  <hierarchy name='[none:region:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='member' level='[none:country or state:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Alsace&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Burgundy&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Languedoc-Roussillon&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Loire Valley&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Provence&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Rhône Valley&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Vin de Pays&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape,Region)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='76' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55ff00</color>
                <color>#6ef829</color>
                <color>#86f250</color>
                <color>#9dec76</color>
                <color>#b2e599</color>
                <color>#c6dfba</color>
                <color>#d9d9d9</color>
                <color>#dfdfba</color>
                <color>#e5e599</color>
                <color>#ecec76</color>
                <color>#f2f250</color>
                <color>#f8f829</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]))</cols>
      </table>
      <simple-id uuid='{E441FA91-AB7D-49E5-ABD1-E368A65424A7}' />
    </worksheet>
    <worksheet name='Price vs Rating - Chardonnay by Subregion - Chardonnay (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Burgundy by Subregion&#10;Average Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[subregion]' role='dimension' semantic-role='' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='member' level='[none:country or state:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Burgundy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Bâtard-Montrachet&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Bienvenues Bâtard-Montrachet&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Chevalier-Montrachet&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Corton&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Montrachet&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Pernand-Vergelesses&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Pouilly-Fuissé&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;St.-Véran&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' direction='DESC' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' value='88' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='76' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' value='8' />
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55ff00</color>
                <color>#6ef829</color>
                <color>#86f250</color>
                <color>#9dec76</color>
                <color>#b2e599</color>
                <color>#c6dfba</color>
                <color>#d9d9d9</color>
                <color>#dfdfba</color>
                <color>#e5e599</color>
                <color>#ecec76</color>
                <color>#f2f250</color>
                <color>#f8f829</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk])))</cols>
      </table>
      <simple-id uuid='{3112AC19-44E5-4496-A3E7-E4A7EA6F28CD}' />
    </worksheet>
    <worksheet name='Price vs Rating - Napa Cabernet by Subregion'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Napa Cabernet by Subregion&#10;Average: Cost per Rating Point, Rating, and Cost per Bottle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[subregion]' role='dimension' semantic-role='' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='empty-level' member='[none:country or state:nk]' />
                <groupfilter function='empty-level' member='[none:grape:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='member' level='[none:country or state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]'>
            <groupfilter function='member' level='[none:grape:nk]' member='&quot;Cabernet / Bordeaux Blend&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Carneros&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Central Coast&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Central Valley&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Lake County&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Mendocino County&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;North Coast&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Sierra Foothills&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Sonoma&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;South Coast&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Carneros&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Mount Veeder&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Napa County&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Napa Valley&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Oakville&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Rutherford&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;St. Helena&quot;' />
              <groupfilter function='member' level='[none:subregion:nk]' member='&quot;Stags Leap District&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' direction='DESC' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</column>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='139' />
            <format attr='height' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='79' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='230' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' value='112' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' value='100' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' value='220' />
            <format attr='width' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' value='208' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:rating:qk]' />
              <text column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] / ([federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk] / [federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk])))</cols>
      </table>
      <simple-id uuid='{0D555A2F-8FCF-472B-A144-AE9AA2F609F8}' />
    </worksheet>
    <worksheet name='Scatter Bang for buck'>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.04uy5ml1745xu51ero99v0x2awj4' />
          </datasources>
          <datasource-dependencies datasource='federated.04uy5ml1745xu51ero99v0x2awj4'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]'>
            <groupfilter function='level-members' level='[none:country or state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:price:qk]' field-type='quantitative' major-origin='0' major-spacing='5' max='400' min='4' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' />
              <lod column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
              <lod column='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk] * [federated.04uy5ml1745xu51ero99v0x2awj4].[none:rating:qk])</rows>
        <cols>([federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk] * [federated.04uy5ml1745xu51ero99v0x2awj4].[none:price:qk])</cols>
      </table>
      <simple-id uuid='{9393CFF5-502A-42AB-A3CB-A0E721740904}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cab_Bords_Actual_Pred_subregion_test' name='federated.1jx1zjn1xcrfoa1cdm9ms127pytr' />
          </datasources>
          <datasource-dependencies datasource='federated.1jx1zjn1xcrfoa1cdm9ms127pytr'>
            <column-instance column='[predicted price]' derivation='Avg' name='[avg:predicted price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[subregion]' derivation='None' name='[none:subregion:nk]' pivot='key' type='nominal' />
            <column caption='Predicted Price' datatype='real' name='[predicted price]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jx1zjn1xcrfoa1cdm9ms127pytr].[none:subregion:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.263370156288147' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jx1zjn1xcrfoa1cdm9ms127pytr].[avg:price:qk]</rows>
        <cols>[federated.1jx1zjn1xcrfoa1cdm9ms127pytr].[avg:predicted price:qk]</cols>
      </table>
      <simple-id uuid='{08818AD5-C2AA-4EF7-BB99-A8EBCABEB541}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='9' name='ActPred ChardsSub' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='98000' id='11' name='ActPred ChardsSub' pane-specification-id='0' param='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[none:subregion:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='ActPred ChardsSub' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98000' id='11' name='ActPred ChardsSub' pane-specification-id='0' param='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[none:subregion:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7AEC3EA8-9274-4B62-9580-2EE8D46FB62D}' />
    </dashboard>
  </dashboards>
  <windows source-height='261'>
    <window class='worksheet' name='Price vs Rating - California vs France'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03D7BB7E-EFB2-4761-A57F-A09E1C415484}' />
    </window>
    <window class='worksheet' name='Price vs Rating - California vs France - Cabernet'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F3E0749-D2F4-4D8D-BA75-05EDF667928D}' />
    </window>
    <window class='worksheet' name='Price vs Rating - California by Region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A23A8522-3FED-4623-8F86-C8D8289D2DEE}' />
    </window>
    <window class='worksheet' name='Price vs Rating - Napa Cabernet by Subregion'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCEE8E32-9971-4EAA-9A80-432361BABE7E}' />
    </window>
    <window class='worksheet' name='Price vs Rating - Bordeaux by Subregion - Cabernet'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B036EC2-FA5D-4A05-B891-3644725B5BB2}' />
    </window>
    <window class='worksheet' name='Price vs Rating - California vs France (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14964E42-FC50-417E-8D77-0918EC03B7AA}' />
    </window>
    <window class='worksheet' name='Price vs Rating - California vs France - Chardonnay'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{657E60F0-4C70-4870-B140-951E4F1C67C6}' />
    </window>
    <window class='worksheet' name='Price vs Rating - California by Region (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[Exclusions (Country Or State,Grape)]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F77487F6-47B6-461A-B27E-0861B2847560}' />
    </window>
    <window class='worksheet' name='Price vs Rating - Chardonnay by Subregion - Chardonnay'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='36'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DF23223-7767-4DE5-8207-9BA7B19BD7EC}' />
    </window>
    <window class='worksheet' name='Price vs Rating - Chardonnay by Subregion - Chardonnay (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]' type='filter' />
            <card param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[:Measure Names]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[avg:cost per point:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:Rating Bucket:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:region:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A7767DE-E465-4735-86CB-9F890328D6A9}' />
    </window>
    <window class='worksheet' name='Scatter Bang for buck'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:country or state:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:grape:nk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:price:qk]</field>
            <field>[federated.04uy5ml1745xu51ero99v0x2awj4].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8F7A729-C7AF-40DE-B3F9-15D7E4740798}' />
    </window>
    <window class='worksheet' name='California Cabernet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]' type='filter' />
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[:Measure Names]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DB2CA0F-DE1B-4382-9193-CFDA293092DB}' />
    </window>
    <window class='worksheet' name='French Red Bordeaux'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]' type='filter' />
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[:Measure Names]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{809D42CE-E206-481E-82D0-8777526A50C6}' />
    </window>
    <window class='worksheet' name='California Chardonnay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]' type='filter' />
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[:Measure Names]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F4B6930-209A-45F1-B4B5-656E53ADD98F}' />
    </window>
    <window class='worksheet' name='French Chardonnay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]' type='filter' />
            <card param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[:Measure Names]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Descriptor :nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Rating Bucket:nk]</field>
            <field>[federated.0c5kvy61ixmedo1giline08ma4vy].[none:Type of Wine:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A175403D-7BA5-4F56-BE22-F2BC95A28F36}' />
    </window>
    <window class='worksheet' maximized='true' name='ActPredBordSub'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[none:subregion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mf6i3l0872hv51b5al2i0w6jnfr].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B345503-D096-4FCE-A6CB-32B7E8233DDB}' />
    </window>
    <window class='worksheet' name='ActPred ChardsSub'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[none:subregion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kze8cv0dv69ab16fbm0h03r7fxu].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C36F886D-D419-4488-AA7A-5315273306F9}' />
    </window>
    <window class='worksheet' name='ActPredChardReg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1b2f37d06god1w101aoz50742sh7].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1b2f37d06god1w101aoz50742sh7].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b2f37d06god1w101aoz50742sh7].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{455202E5-9725-4988-9035-70A848D51780}' />
    </window>
    <window class='worksheet' name='ActPred BordReg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g5dk7u0am8i8e1e4onot0kjauqv].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F54AD12-8208-48E2-8EEB-A96CA0237773}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='ActPred ChardsSub'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E24BD527-DBCC-4D59-9AA0-157748975DAB}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jx1zjn1xcrfoa1cdm9ms127pytr].[none:subregion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jx1zjn1xcrfoa1cdm9ms127pytr].[none:subregion:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA8C113F-1964-4A34-B9E6-7A5DC20B2A8A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ActPred BordReg' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActPred ChardsSub' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ActPredBordSub' width='192'>
      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
      WSOus7M4NYajuVnZF5zByLLMnTt3KCoqorq6+qjNOVJ2DIDi02dZ6/4BayGZ37rxTup1lVpD
      WVkpY6N+DGYby49HEKgwGsPk5Z0mtKSURTlM3b1qP+n2FBcXc+rUqeceSZQpNqdTd8cACIdC
      vPGr/5Cc5AKrsVjqdSFkwqEw0UiEVV+Q3OLTxH1udCYz3gWvUhblCHR3qx2Px7l79y5lZWVU
      VVUdmO5+yYT7vOOVwbVFbk/NUyy7yar7InXlW6f3CTmBbzmMza7GWlCOZn0FqaoWR7aF1aVF
      SgoalO5PBpJIJLh16xY1NTWUl5cftTkZw7a5QJFwEFkW9N3vIqyy8NqrzZgMe6/1ouQCpV93
      N9rxeJyOjg7q6uooKira9X07TvlL+9Xd9sqleTeRBKyHk6ikdZbXg1QUHp9iRwpPiUaj3Llz
      h9ra2j05/0lh2wAorzrL7OAdtDmneeNy7WHbpHBAxGIxOjs7qauro6Sk5KjNyUh2XAfQmOz0
      d/w1f/rtbzM2u3SYNikcANFolI8//pjGxkbF+Z/Dti1AMhbkg486MVsdfPXXfp1s4/Gr+HWS
      CYfDdHR0cPHiRfLy8o7anIxm2xbA7x0n7qiltdbO/eG5tM67KxwsT05fb25uVpx/F2zbAugt
      +bDez+NNGZnbTOaZqSlXbmamE4lE+Pjjj2lpaSE3N/eozTkW7HlLpJxMMDn+iISqmNrTdvoH
      RzBZ7ZTmmhmadINKw+WLW2VRlGnQ9Os+0Y5EIty5c4eWlhZycnIOTPdEToO6xh7T1TuU+rnl
      6hepKc8HtlIhzpytYWzUz+rCLKGkClU4wuJSkJr6JuYmhogLkSqLoqRCpFcXtg6g7u7uprm5
      GZvN9tz0hr1wYlMhys80UlJZx9TYKOF4Ert1+3OetDo9RaX56DY8rCbAHFfKohy2rt/v5+7d
      u7S1tZGdnX3g+icyFUKlUjPS9WO+e3eWSpvAr3GQl711wHEyEWVy3IU/kKCkogHZPcWmZKCh
      ppyx0THM9jxll80h4ff7uX37dtqc/ySwY6g48oq52pLDWN9ttOqnLq3W6Kmtf1r60FJbn/p/
      feMraTJT4bNsbGyknvyZfhJjJrPjw9pgL0SvTtLU0kpFvvUwbVL4HNbX11POb7Uq382LsHMA
      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
    </thumbnail>
    <thumbnail height='192' name='ActPredChardReg' width='192'>
      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
      hQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='California Cabernet' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='California Chardonnay' width='192'>
      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
      fal8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      NEoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='French Chardonnay' width='192'>
      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
      gMG15r8DIcKO/fp/U4sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='French Red Bordeaux' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - Bordeaux by Subregion - Cabernet' width='192'>
      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
      gtvtZnh4mB07dtDX18fu3bsxmUysWbMmH5eDLMs4nU4URcFoNFJUVERRUdGCh4rMqQYwWuzU
      rqwgdVWAnC+S4L5Nmzl99hwrKly5JXzzs5RPv365ebSlz2Ajn1ej67d+f5YsWcLmzZsxGAys
      WLECl8vFpk2bsFgsPPfcc6RSKRwOx23db4PBwBNPPMGLL76ILMsYDAY+/PBDKisriUajaJqG
      3W6/7d9U0zRCoRAlJSW3VU4+mJMAZEXhy6NhkiRxKXmQfk1E5OVoyHyiaRrSdcrN68Op6df1
      PZ+Cvjpa9FZobGzMfc9utwPkFskYDIbcfZ8rmUyG1tZWbDYbPp+PaDRKfX09Xq+XTz75hK1b
      t97275nNZnn99deZnJzk+9//Pp9++imZTIY1a9bg8/nw+/243e7rzg7fCpqm4fF4qKiouKXz
      5ySASMBDT98wGUsG55oKfBEZu1Hi7JnTuEpXIstybpngfFRpsqxct9x8TtLM5LsuScw+oHkm
      G9L1bURCqIffzosNyV2G8vDOW/RH5uGHH8ZqtfLoo4/y8MMPE41GKSkpIZPJYDKZbvsep9Np
      kskkDz74IG63m0gkwoMPPkh/fz9f+9rXCAaDHD16dE7PTTwe53e/+x3hcJgf//jHHDx4kGw2
      y0MPPURNTQ1+v5/f//731NfX09TUxNmzZ+cmAGdJGdseeeLK30XA8iVzKUpwPVIJ9M5T+Slr
      eQ3cogAkScLlcvHYY48B10aw5isawGq18tRTT7F///5cOMfQ0BAWiyUX6bpv3745la3rOoqi
      0NTUhNlsxmQy8e1vf5s33niDmpoawuEwJpMJq9VKZWUlTz75pBgFKmTUQ69D+vYn1qQllcgP
      fO2Wzk0mk3z00UeX4ssUhUQiQSgUori4mAMHDtDU1JQL954tNpuNffv28cILL+Rmy69etVZV
      VcWPfvQjPvzwQyYmJvD7/UIAhYzedRYSeRjzr14NtygAi8XC3r176e7uprm5mU2bNuWOPfro
      o7flRjwe59133yUcDrN06VI8Hg+vvvoqjz76KEeOHKG2tpbW1lYSiQRlZWW0trYKAQgWHpPJ
      dNtDttfDbrezb98+hoaGqKqqoqqqKnfscqf46s927dolBCCYX9TXfw1qHkIcZBnlmZ/e9DST
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - California by Region' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - California by Region (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3dWXBc15nY8f+9t7vRO9bGvhIk9oWbKFmyLMoULUpDL4olV7lqpEo8lfE8
      zVNSqbykKnmYh1SlklSmxvGUKx7P2NJInrJGNKnRQlIakyZEcQGFfSFWgli70Qt677vkASRI
      SgQIQkCjSZzfC6sbzXu/7r5fn3PvPd85kmEYBoKwQ8nbHYAgbKe0JUAkEknXrgRh3dKWAKqq
      pmtXwhrmpsbp6u7B6/MzMj75wNcbhsH1ketpiGx7mLY7ACF9jNQSkwsxDu5tRk8l6O66ytLi
      AtWNrfgmrxOKqTQ2NTLSfw3JUUi2KcXiUpyUIdHX20tS1ahvqqfn8lUUs5k9zS0M9/Qgm2Qq
      9zSzNDeGLxhj164qglENj10jqLkoyXds91tflTgH2EG06BIWdy6SJCFJUFRWRePuUubngxgG
      xAI+vKEowUiKhl0VLIYTtLQ0YzWlyNtVS12Fh8npWeyuApqr85j1R7A482iorcDv86PrBlLc
      z1xEYnFumsmpeXJz7Nv9ttckEmAHMbk9xOfH8fl8hCLx5Scl0GNBAkmFbKcdMMjNy0OSJFLx
      KN6FWeKqwvyNeWbnvbicTqSvbFkCEvgWE+TmuDCQyXdZCCQlrMpXX51JpHRdBg0Gg2RnZ6dj
      V8Ia1GScuYVFCjweDEPHYpJJaRLRkA/JbMPhcKCpKaxWK8lYhMVwnByXAy0ZI6bK5Oe5SMRT
      WEyQMhQMTcNiVkhpBvFwEF02YXe4iMyNEjB52FWcs91veU0iAYR7GLqGZkiYFBkwiEejKBYb
      ZtP6OwuGrjF54yYVlRXIUma3AKILtENpqRhXLl2ip6ePhH7neTV4k+tzEfx+P1o8xBd9QyRV
      bc1tqYkoS5HEymNJVqiqqsz4gx/EVaAda2p4kMrmfXjsJpKxED3XJ4hpMnurXADMzs4Rz1JZ
      DIXxzd1g0Bcgy5mHFPMSjOnkOqzEDIlEUqN1dwmLETMh7xQLCwsUVLdQXuDc5ne4PqIF2KE0
      1cB0q1sTDS+h6hDy+7ndGGiajqewmJraPSSXwjS070eN+lF1mUNPPoHFbKa+qZkcmwnd0DF0
      g1AohMlk4PUGt++NPSTRAuxQFXt2ceXqZRwOB9kuC5oBZpMJJBlZklAUGSQJRZbxFOUx8MVV
      rM48FD2GjIQiKyCBoihIkowsy0SjEaw2y/L/fUSk7SR4fn4ehyNzb4gIO1PaWgCTyYTFYknX
      7gRhXdKWAIqiYDab07U7QViXDXbWDNRUEk3T73lW11Q03UDXNRKJBKmUGAAnZLYNtQDB+SkG
      pxbRUkmeeOIgJlnCMHSunP8Ia+UBXIkZApqNgrw8yks8mx2zIGyaDSXAzLyP5pZW5kb7WIqn
      yLVbWLgxQm5JDUkJDBTQEqRUDcMw0HUdTdPEkGgh42woAcyKTErTUTUdkywDGv3D4zjtZhbU
      KEef3ouiyFy5coWqimIURUFRFEwmcdVVyCwbOiKrqmvoHujBbHNhk2OMjIV57shREkte5mMm
      5m6O4wtGcOUViTttQkbL2MFwhmGQSCSwWq1bGJWw02Vkn0TXdU6fPs3AwABvvPEG169fZ3Jy
      khdeeAG3200gEOAPf/gDAN/5znc4c+YMkiTx4osvoijKNkcvPEoysocSjUZZXFzkueeew+Vy
      MTY2xksvvcSnn34KQHZ2NsePH0dRFM6dO0d9fT3FxcUMDQ1tb+DCIycjE8DhcNDe3s4HH3zA
      9evXMZvNWK1WEok7Q247OjqYnp6mpaWFa9euMTAwwNLS0jZGLTyKMjIBEokEXq+XgoICvF4v
      kUiEjo4Oqqqq6OrqYmZmhtzcXMrLywkGgzQ3N2Oz2aivr9/u0IVHTEaeBBuGwdTUFFevXuW7
      3/0usViMhYUFqqqqCAQCuFwuJiYmsNvtFBcXMzExQXZ2Nrm5uVv8LmBqaory8vIt34+QHhmZ
      ALCcBABSBlUVnThxgrGxMY4cOUI4HGZqagqz2cz3v/99AD7++GPC4TD5+fnouo7P5yMYDPKT
      n/xkS+NKJpOYzeaM+qweFRnZBQJuTd2RWV9oVlYWdruduro6bty4wauvvkoymVz5e0NDA5qm
      kZeXx+HDh8nLy+Oll17a0phCoRC/+MUv+Pjjj9F1nQ8//JCzZ8+u/ID09/dz6tQpLl++TH9/
      P++//z5vvfUWqVRqS+N6VGRsAtxN13UuXbrE+fPnUVWVy5cv09HRga7rD/7Pm8QwDI4ePUp5
      eTnvvPMOkiRxd+NpGAYlJSUcOHCAiYkJVFVlbm6O4uLiLY2ru7ub0tJSvvnNb9Lb20tZWRmK
      ojA7OwvAnj17OHr0KIODgzQ2NnL06FFMJpO4K39LxnaB7jY7O0tPTw8ej4eJiQk8Hg+yLON0
      Omlubt7kSO/PMAwuXLjA+fPneeaZZygpKaGzs5PS0lJyc3PJzs7m8uXLSJJETU0NiqLgcrm2
      /HwhlUrx61//GrvdTn5+Pq2trczPz2MymWhsbCQWi3Hq1ClMJhM/+MEP6OjooLi4mJqami2N
      61HxSPwMZGdnMzQ0xPDwMMeOHePcuXO43W7sdnvaEkCSJJ555hk8Hg91dXUA1NbW3vOa733v
      e2mJ5W4zMzM4nU50Xae8vJyLFy+SSCQ4cuQIQ0ND6LrOU089xSeffIKqqoyPj/PUU0+lPc5M
      9Ui0AENDQ8zOzlJUVMTs7Cz79u2jq6uL8vJyqqurNzfQR4yqqvzud7/jySefpKqqiqmpKRRF
      obCwkEAggKIojI+PU1NTg9PpJBwOi/mZ7vJIJICu63R2dpJIJDh06BCXLl3C7XbT1NSUcSfK
      20HTNGRZFp/FBjwSCZCJDMPgzJkzRKNRysrK8Pv9BAIB6uvraW1t3e7whHXa0FUgQ9cYHxlk
      xhvg7uzxz9/EtxRDTcYY6O8jFE2suo2HkamFNF6vl7179zI1NcXi4iKvvPIKPT09bOeqU/F4
      nLNnzzI6OkoqleLTTz9lcHBwW2PKZBtKgJnxIWRXMfOTwyRSy5cidTXOUH8fc74Q/b29lNfs
      YqC3h6/7sQ8NDfGzn/2M0dFRhoaGeP/99+nu7mZubo733nuPjo6ObftyzWbzyh3pxsZGTp8+
      TTQa3ZZYbjtz5gzt7e10dHRw+vRpGhoa+OKLL+4ZRyXcsbGa4GicqnIX+qKNSFLFajYzMjTI
      rro6FhKQMiScVisWRUIzDKSvURL52WefcfDgQYqKijAMg4qKCn77299SWVlJY2MjlZWVaNra
      c1duBcMwiMVieL1eLBYLiUSCpaUlDhw4sC3x3FZeXs6JEyfQdZ3q6mpOnjyJYRjIspyxLel2
      2lACZNut+IJhQrEERWYIhyNEo0lCwTEWVBflLojEE6QMUCQJ6WuURB45coS33noLk8lES0sL
      7733Hjk5OTQ1NTE0NMTFixf58Y9/vC03dv70T//0nscHDx5MewxfNjg4yGuvvcbJkye5evUq
      P/zhDzl79iyxWOyxOgfbLBs6akqq6xgfvU5B+S4ssoY3qtJ+8AnURIRwSsZpNrg+MkJdQ9N9
      FlNYP8Mw8Pv9NDQ0MDIyQk5ODseOHeO9997D7/dTX1/P+Pi46N/e5eWXX6ajo4P29naqq6v5
      4x//SF1dHW63e7tDy0gZfxXI6/Xy29/+ljfeeINYLLZyS9/hcNDZ2UldXR15eXlbEPHa5ufn
      KSgoQJYfidEkwioyPgFguT4gKytrkyPauNsDzNrb2zlw4ADnz59nYWFhZahBIBDghRde2PJx
      QF9mGMZKf19Yn20cCjEOvLOuV27OsZ8N/HQzNkQymcRms3Hw4EFycnJobGwkEAhgt9tpa2vj
      s88+25T9PAxd17lw4QK9vb28/vrrXLt2jUAgwNNPP83o6OjKHfSSkpK0x5bJtjEBhoH/lMb9
      VbFZCdDW1sbCwgInT57klVdeweVy4Xa7CQaD2O12cnNzCQQCaW0BgsEgCwsLHDhwALPZTFtb
      G4lEgnPnzvH8889TX1/Pv/zLv/Dqq6+mLaZHgWgrN2BkZIQrV65gsViYm5vj0qVLxGIxYrEY
      Fy5cIBgM4nK50hpTTk4OHo+HTz/9FL/fz8LCAm+++SaNjY2Ew2F+85vfiBGg97GN5wAfA99J
      x65vqWK527U5+vv7qaury5hpWKLRKGNjY3R3d1NYWEhNTQ25ubl89NFHK/dRTpw4wY9//OPt
      DjWjiBZggxobGzPm4Aew2Wwkk0kSiQSHDx8mHA7T1dXFK6+8gqZpfP755/zgBz/Y7jAzjmgB
      viSVehlI3/QqJtPPkaSmTdmWruskk8mMmE0vEomQlZWV8ZVnmR3dtpgEQmnbm2EkedAoZl3/
      DMMYXtf2zGb4uiMxJKkJWT6w4f/v8/l46623KCsr4/jx45w8eRKA48ePYzabGRgYYGRkBJPJ
      RHNzM52dnei6vjLZWTqJBHgEaNopdP3ttO1PUX7ytRJgenoal8u1UpW2Z88edF1nZGSEhoYG
      6uvrqaio4He/+x3PP/88x48f5+233165vJxO4hxA2HQtLS2UlJTw5ptv4vP5sNls98zsp6oq
      n3zyCQ6HA03T+M1vfsOhQ4e2pesmEkDYdDdv3lyZp7WmpoZz587R0dFBZWUlHR0ddHd3k5WV
      xdLSEqdPn0ZRFKamprZltKroAgmbrqysjOeee47y8nJyc3NXRs0qisKhQ4eQJAlVVVf6+6qq
      IknStpwwiwQQNp0kSfeUhd59YN8+6O9eMnc7LydvKAHCvhl6Rm4CEk8c3I8iS0yNX8cfipCS
      rBRkxZmLSBQUeKipEGNPhMy1oQSYmp2jtX0fc6N9hOIquXYzRUVFBMNjWLOySCZimBUZs9my
      6iJ5kqSRzsQ3DNC0zKuI0nUNXV87rnTXO+i6san98aWlJc6dO0d+fj5NTU2cO3eOoqIiDhzY
      +JWmzbKhBFAkGc0w0AwDRV6+iK1k2amsKKf/+g0O7mtDkiSuXLlCaVEesiwjy/KXmrr0n3+v
      p6lN93nY8nQma8dlGBLpzAFJkja1W3Lx4kWefvppzpw5g9/v5/Dhw5w9e5ZoNJr2MVNftrFF
      8qoq6OrtwpxlX1kkj+Qi0aSOOzuHmRujLIai2N35yLfu8nx1stv0zmGzvOtMnDcn8yYBlqTN
      nZW7srKSDz74AFVV2bdvH6dPn2Z2dpZ4PL7tlWobSgCLI5eDB+7MxV9b4wLu7euXfa2whMfJ
      yMgITz31FJ999hkul4snn3ySCxcupGU9hwcR9wGELffyyy8TjUZ54YUXyM/PZ2FhgWPHjmE2
      m7c7NHEZVNh6iqLQ1ta28njv3r3bGM29RAsgbCnDMLZ9srC1iBZA2DK3V6wZHh7m9ddfp7e3
      F5/PR1NTE6FQiOnpaerq6rZ1cUPRAghb5vZqn9/61rfIyclh//79HD58mJ6eHoaGhjhy5Ahd
      XV3bGqNIAGHLWK1WvvnNb/Lhhx8yNDTE9PQ0p06d4sUXX8Rms/HBBx9QUFCwrTGKBBC2TDKZ
      ZGRkBLfbjdfr5d1336WlpYVAIEAoFKKyshKv17utMYpzAGHLWCwW2tvb0TSNb3zjG9TW1qKq
      Kg6Hgx/96EcsLi5u+xUhkQDClpEkCY/Hw4svvgjwlXmSSktLtyOse4gEEDYkFhshmbyRtv1Z
      LKXYbHWbvl2RAMKGpFKzRKO9ad3nViSAOAkWdrRVE+DKlSvpjEMQtsWqXaAzZ85QUFBAeXn5
      V8aG66k4vX0DWJx51NVWIsFKRVi2p4x8OwyPTVFQUkl5Ufrn7heE9VqzC3TixAkGBwfx+/33
      PD8+MkRpbRNGdJFIYnkWprKqWhrq9zA/c5PhkQla2tqZmxr/2ovkCcJWWrUF+Pa3v41ya22v
      L5fkJVQNm8VEltlEUtMAhVQ0RHffANbsIpIRHyZZQpZYdZE8URK5TNMezZJIXdfTFM2d/W3F
      tCmrJsBaC74V5WUzOjFJfClOiUllZi6MkQpTVbOL0fGb5NoUJm9Oo0nmNRbJS+9MAJLEuqbd
      SKXSEMxdFEVBlteOK5VKb0mkLD94ipJ0r0Ijy/KWTJuy+rtQ45z+wwUAzp//V5LqnYzPK62h
      PM9BQ0srWSYL2S47uTk5pFIa7e2t7G5sxWpSaGttzsgiREG4bdWUOvVPf89bH3xOX+cl/AmZ
      J7/xrbv+KpGT71l5ZLebACs25536zsKioq2IVxA21aoJ8Cev/VskRxF5niIw2ZDFT7nwGFq9
      C6SnuNrVh8PhxOmwpzEkQUif1RNAMmHRY1zpvMrV7n50XVzQFB4/9+8CpWJMzAU4+tLLROIq
      mO1Iog8kPIZWOQcwSGkadrsDyaSBySqu5giPpft3gcx2dleWMjHYzWcXP6NrYPSBy/gIwqNo
      jfsAMa6O+Pj3f/7n+CZ7iKfSe+dPEDbbzMwMp06dQlVVIpEI3d3dqyeAYbLz7QM1/PxnP2d3
      +7ewmcXIaeHRpaoqH374IbIss7S0xLvvvrt8F361//CvJ9/m0sAkueV1fPfIUxk3gasgPAxZ
      lvF4PIyNjSHLMg6Hg8bGxtUT4POBG/zZT/6MicGrJJOptA/IEoTN9uyzz1JbW8snn3xCKpUi
      FoutngBNNcW88/bbuJ1O/vGf30fVRAIIjy7DMDh//jw9PT08++yztLa2cvr06dWHQhx/9fV0
      xicIW0pRFI4dO8bBgwfJz88nPz9/7S4QWoKz//rHtA7DFYStJMsyhYWF9zy3xgBriYGLp7k5
      76WkqJDDzzyJSVnOl1hgnq7hG8iyif3721AkiRujQ/jDcXTFSoE1xUxIE4vkCRnLMAw0TVsj
      ASSFl155jRvzQZwO5z1XgSZvTtPctpe50T6W4io5NjMVu+rIDXgZmJgjEo5hUqzY7XYMw7hn
      obyVzUs66aypMIzlBekyjWHc+7nc/zXpbYZvHxwPek06rSemh5FIJHjzzTfXSABD5fcnfo/Z
      U42xNEdjczM2+c56X7detPLyhalRbvgT7G1pXF44zzC4dPkKnrw7lWXbuUbYV/efOR4Ul7T8
      caZVJn5WmxnT8uKE0tpdIFmSiAXnicfvrAYJUFleRlfXNRRzFpVKnJExL3M3xnHnFTJ5cxaL
      HsG/FMPqzFleJE+SVlaKvHv76bQcxoObnE38kVkXSfry5/JVmpbuz0p6YEzpTpD1xPQwAoEA
      5eXlqydAyO+latduPJV1NDfsxqLcecNWdwGHnrgzrXVtjYvamnv7+uWbFqogbL7c3FxCodDq
      V4H+7v/9kj3Ny9dKXXZrOmMThC2XlZXFa6+9tnoC+IM+Ll+8yNhwL7/+p9+TUsVgOOHxs2oX
      6D//l79C0w1++MMfgiRjUjLvpEgQNiKZTHLp0iX27du3egtgMStMzy1gs9lYmJ9BVEQKj4sT
      J04wNTXF9PT0GtOivPNL3vrgcw7tayWsZ/Ef/vLPUURdmPAYOHjwIB999BGhUGitaVH+Hbv2
      H6FhTw26AUqaZwIThK1w+4ba7t276evrW2MskKFy9swn/MP//d/81//+v+6ZGU4QHmUOh4PO
      zk6OHTu21rQoEnH/Teb1bAqsEuLwFx4HkiRRXFzMT3/6UwoKCta4E6xk8SfHXuDCtSF2P/EC
      WYroAgmZLaYvMZHqWd+LzUBirdGgqSjvfnyRv/zLv+Bv/vr/8MS+ZlEXLGS0kO7jk+ivH+r/
      rH5Em6zsLrTxq7/7FdbcinuGQgjC42LVFmCgp5fvvfEXmCWdvt7e7Ri8KQhbbtUW4P0PP0KW
      l0crnj17moSYF0h4DK3aAjx7YA9/8zd/i9OiY/fsxmq+s6JLIuyne3AMxWKjvaURWYKb48P4
      QjFMNjeFDpic8+PI9lC/S4wLFTLXqgnwxOHv0fJklJRm4HI67pkacXJykrrmtuWKsIRKttVE
      SWUtnkSEa32jJJZU9u7bz7XOTnSjDAlWKsPuMNI63eLyrjNxPMeXP5ftZxgPrvjajoqwrYhp
      jZJICZvdgQ1YXPSRk5OHfKsoRjdAkZYLZm5Pmx7yzjA4uUB7eyv9PV8sF6CwfMgZun7fksh0
      LpIHbGpJ3WZZXmzu0Ss/TH9MD/7+jA0s3LeuVcfGx8Zobc9dSYDykkK6v+hEkhQqTMsVYVMj
      3eQWlTE9M4fHbedq5zXMVjeKJIFYJG9VsiwWyVuPdcW0gWNq9S3qKh/8/p8JxjUSiSTzwSRH
      n38aRQJHXglPHbpTAfbVirBSUREmPBLWnBeoe3SWYy+9RNDvZar/AuPeWBpDE4Stt3oLYLLR
      XO7iV7/6FZKjmOpiC9kOSxpDE4Stt3oCaCmiKuTkeTj45NM01lZk5FQZgvB1rN4FUiwc/vYL
      FDplfvHLvychhkMLj6E1WoAkXd19NBz4Ft9++d9gNomBcMLjZ9WjOhAMoKDxT//wt/z1L99B
      FUXBwmNo1QT4+f/8K0YXNcpLPfzJd7+HWdQDCI+hVY/q//jf/gffaCwmFEny4fsnxLxAwmNp
      1XMAWTbR0HqAhtYD6LourgAJj6V1DYVI921vQUgXcWQLO5pIAGFHEwkg7GgbTACDWCRMIqne
      ecYwSCQSGICmJgkGg0SiYvCckNk2lAD+2Un6R29wrbOT1K0bZN6ZG1zouIIOTF7vZ8YbIBKL
      b2asgrDp1nUV6MvmvH4a6luZG+1nKZ4iz27BU1pJ8WIYAFk2k4gECSkmPHk5K9VgqnqnxZAk
      La0VYcsVReqDX5hmmqah62vHle7qK1037vmu7v+a9N4X0nX9gTFtpOJvQwlgMckkVJ2Upt33
      DnF5bT1VisyVK1cxqstQREXYqhRFVISthyzLD4xJ2dSKsDVU1dTS3d9DliMHmxxjZCyMTYmx
      GPBzfXQSt0nFGwyTU1AizrKFjLahBFCyHOzdu2/lcW2NC4DSyl0rz4nlsYVHgfiBFnY0kQDC
      jiYSQNjRRAIIO5pIAGFHEwkg7GgiAYQdTSSAsKOJBBB2NJEAwo4mEkDY0UQCCDuaSABhR9tQ
      AqRiIa5evUp3//DKOPXQ4jwXL11DB/zzU3Re62RkcnYTQxWEzbehBJgYG6O2sZUsPcpSYrlK
      x2J347ZZMIDxqTna2vcS9E5n5LJ0gnDbhuoBVMPApMiYFBntVmmc1Wpd+bshSci3FsnTDQNE
      SeSqREnk+mRUSWRpYQG9Pd3oqkaZkmB8wo/dnGDq5hRmdzb5jiy6enrBbBeL5D2AKIlcn4wq
      iXR7ytifW4QkK8iSREW5A8PQeO75YiRJxmQqpVRVUdZxwAnCdtrgESphMplXHimKxJdPJ8xm
      M4KQ6cRlUGFHEwkg7GgiAYQdTSSAsKOJBBB2NJEAwo4mEkDY0UQCCDuaSABhRxMJIOxoIgGE
      HU0kgLCjbXAwnLE8HlySkW+tIG8Yy8/dHiZ7e3V5sci2kMk2lAChhZv0TcxjaBpPPHEQkywx
      1NNJXJdRrNk4jSC+hJmCggKqyoo2O2ZB2DQbSoDpeS+tbe3MjfaxFE+Ra7cQTsGB/Xu5erUT
      3aagSBqGcadlEBVh9ycqwtYnoyrCTLKMqulomo5yq4sjAbfLlqrrW5BliSuXr1BZXiQWyVuD
      qAhbn4yqCKuqrqa7vxuzzbWySF6ZJ4fOa9coLKtm9sYYvlAEZ26hOMsWMtqGEsBsc7N///6V
      x7cXySuquP1MLqVfNzJBSAPxAy3saCIBhB1NJICwo4kEEHY0kQDCjiYSQNjRRAIIO5pIAGFH
      Ewkg7GgbSgBD1xgfGWTGG1iZ/z8ZW6Kvb4BoQkVNxhjo7yMUTWxiqIKw+TaUADPjQ8iuYuYn
      h0mklkcFdvf0s2tXBX19/fT39lJes4uB3h6xQIaQ0TaUAMFonIIcF9l2G5HkrSGqigmr1YGs
      p0gZEk6rFYsikd5Bs4LwcDaUANl2K75gmFAsgd0M4XAMSddIJKIYihmLDJF4gpQhTjKEzLah
      0aAl1XWMj16noHwXFlnDG43T3FTPyMgEjY0NWEhxfWSEuoam5ToBQchQG0oASVao2V2/8rio
      0AZAU5P71jNmGpqavnZwgrDVJGOL6+1ul0QuLCxgs9nu+ksC8G5ge8v/Sg/dtJiAe+uT7y7i
      v7P9edjAmYthbCQmgHwk6c5qOrcnE5Du2phhhIDYBmIy7tnO+tmRJNear9D1JIbx8OVzG41J
      kkzIctaXYrj3+9MMlbgRfrjtbnUC3BYMBsnOzk7HrtZN0zSUdBYmr8P9EkC4v834/nb0KnaZ
      dvBD+mttH2Wb8f1l3KcdDnjp6enFG3i4pmyrGIbO5NgwA9cntjuUNQ0PDpDSDXy+h+9WbkQs
      7Ke3p5fFUPS+f/d5ffe/B5QIMTazCEAk6KOnp5dAOL7mvsK+ReL6ejsqBtcHB0lpBl6f776v
      8Pq8gMH42ETmtQCjIyNU1LXiyDLTe+0ysaRBZVUxA8OzWKwmqgvdzCyGcOYUEZwbR1U1LM5s
      FJONfIfE9JyPhrb9uG2bs0rl0vwECXM+teUuFudvcuPmNDnFFUz2DlBZV8Pk+E3MZok9tTWM
      3ZzF7swhsTiFJacMkxoiGk9QUFrJ9MQNSqtrqCgu2JS4vmx+ehKysklGfJjQmJicwlFQgXdq
      EEU2U93QwsKNMcIpiSf2tXzNvRkMXx+nqbUNQ41x+dJlZIsNh5wiIcnIipWZsevUNO8lODOM
      vaAKh5xkZs5Lc3M9kVhqeRujk7S2taElI3x+sRvMWTRUFTE+NY09p5CluZvY8oqIT4+QzC9h
      X0Mj5gf+6BvMz0ygZ7lIRvykIgHmFpewZxewNDuKLa+YiZFhGlr3MzM5mnktQMve/SxMjTA8
      NgqmbNr2lDDtDVFWvQeXzcziUpz29nYSYT9WZzYVZcXU1NahxcNEwhFSkSUWww9/wriaZDyO
      3enEbDYTCUdAgrnZWdwFJVSV5pNbWEaZx8Xo+E0UkwlVTSFbnTTV15DExN69jQQWQjjtJsJL
      W9eq2dwF6FEfSU0nGgmDZDAzv4DDncfe+gqm57zEkirzC3ObsDcDZBOKrKCF5rbIyMsAAAGC
      SURBVFmMg66raJhpbGlD0pOUVVazq6oUky2bhtoKIpEYaszP4lJyZRuyYkJRFFLBWTy728k1
      y/giEZBNzM3NkJPjJLq0RJ6nhLr6unUc/Mus7gKk6CIx1WBxKUr73nYSkQBmezaN9XVUVFdR
      U1FMdn5R5iXA7M0bJFQDpzMXixKnZ9xHdakHu9WE0+mkuCCbri+6cOcX43Q6ybLZMSky7mwX
      qqZhdbiwWTavYcsrq8U33kPPwAiqpqGYLLjdbnJy3CApuBw2rHYnu3dXo6sqbpeL3JxcJMCd
      pXDti2FKKgoxMCHLW3di63a72V1bRSSaQlM1ZMVMjsuJf2GGrtEFqgqdaAbk5uRswt5kivNc
      dHV3EZKyKXRIOJwuXC4XEuB0OnHZTYxNTpOTk4NkgKpp2Bw5WK1ZOO1ZgIwn284X3d3ELB6C
      Ez1EFQtmTUWSFbJdTlQdZEUmtyiXsYFhUuuc98rtdlNTW00ilqDUk8cX174gO794ORbAlWVi
      7MYcTqeT/w9afRJxwskR1gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - California vs France' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - California vs France (2)' width='192'>
      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
      Xz6WvyCMFf8fsi/rAK9OMa0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - California vs France - Cabernet' width='192'>
      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
      5QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - California vs France - Chardonnay' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - Chardonnay by Subregion - Chardonnay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - Chardonnay by Subregion - Chardonnay (2)' width='192'>
      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
      ULLzAFt2Hph58fYGB7Xr7x6/c9cuNCV5j0/g6ZOyAGhuukrFqnU4rXc7RWJXiLk9SbtC6PX5
      VM/++LFFK2Wfpi0jg6HeTvpd4onmwtMjZTVA9YrVqUpKSLMJVxfnr93CYMtk18ZaTp27SjgU
      Yf9Lr+AwPv0d388Tw6DCl7Tf6OC5gy9gVyeYUu0cPHSIYkuUyXDq+iZPChEAwpes2bSOs8c/
      pGtwBCQ49s7rGCqepSJz8d03FQEgfIkkScg6iazCWtTBc1wdiuIZvIVvEdYAiy+khceWkVPE
      oYNFd37+y0XcvRMBIHzJYrjD+6BEE0i4IxGPs9T2/xMBIADgdfXwkx//hIs3OlATMT798A3G
      QqCpSc59/CFubxDfaD8ffPABv/7lLxmaDD1CLhrB4KO8b/6IJpAAwKWmJhrXb6JxdQ2RoJ8C
      p8xkBDLVANnZOfinIpRUVfDCCxW8f+RN8pz3flDKnHmcPsb11l72f+2baL4+2npcVK7ayOrq
      YkDjvTf/Bdmcy+YdO2n/7BT+cIzVm/dSnm9P/QnfJmoAAYC9e/bR1nSZY5+ex+bMxmmb2QzN
      ZM8mK+Pug1Ei411IOdWYdQ/fT+hzD7Ph2R1UFjlp7XLx4ldfpLft8syL8Sn6BqZZVllNlk2H
      ZyrCzi2r6WjpSsn5zUYEgACA2+UmJ7+IKd8EsUiQ0fFJxsdGCYeCjI2P4/GMEk+qfHLmJnu2
      NTxSHi+/9FWunD3Fmcs3kTU9EjKSdHto1ZDJH/3p72OOuDjb3I2UiHPqQiu5Bc4UnuWXiQAQ
      ACitqCAaDnJg/0Hi0TBSzmocygSxaATNnk2mRSGhamzfuxfzI+0Tq9B05SrojEQiMRwZKsc/
      +RhTZjk3L37GZMjHpYsX6B7ykGUzEowo2G0WJqemHjonz+gYDzqfUPQBBAAMJhtf//Y3kXU6
      JKw0ZuXfeS0rJ+/ugcbMR8xBx8at21HlLLZs34CkqYQjUSxWK0oiid6oZ+uWLSjImE1GVpSV
      Ekso2KyWh8rl8pmPuNrST+PW51hmjXL+Zh+S3sqrLx1ElmY69T//H3/Dquf/ENN0twiApexG
      /BOmVe8Xf5l4tLTWGg9ik+durugNVrbt2Djzg6TDZrMBIBtnllYazXcvdoPRhOERlhtLsg5L
      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
    </thumbnail>
    <thumbnail height='192' name='Price vs Rating - Napa Cabernet by Subregion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Bang for buck' width='192'>
      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
      AQIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
