<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0427.1803                               -->
<workbook original-version='18.1' source-build='2020.1.3 (20201.20.0427.1803)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='top_50_words (Final)' inline='true' name='federated.1bphhig1yki3ei1axah5u0dcgfhy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1fpkxd211i4lx518jupf11ydbvyp'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1fpkxd211i4lx518jupf11ydbvyp' name='top_50_words' table='[public].[top_50_words]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Wine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Wine]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Type of Wine</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor </remote-name>
            <remote-type>130</remote-type>
            <local-name>[Descriptor ]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Descriptor </remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Descriptor Count]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>Descriptor Count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How Often Descriptor Appears</remote-name>
            <remote-type>5</remote-type>
            <local-name>[How Often Descriptor Appears]</local-name>
            <parent-name>[top_50_words]</parent-name>
            <remote-alias>How Often Descriptor Appears</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.471831' measure-ordering='alphabetic' measure-percentage='0.528169' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Descriptor :nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;balanced &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cedar &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;crisp &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;extraction &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;herbal &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;lush &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;peach &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ready &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;solid &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;toast &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;acids &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;brûlée &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;complex &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;dry &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;good &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lean &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;nice &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;potential &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sea &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tangy &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;young &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;astringent &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;butterscotch &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;considerable &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;elegant &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;green &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;lime &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;opulent &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pure &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;simple &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;taut &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;big &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cherry &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;decade &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fruitiness &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;huge &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mineral &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pepper &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;richness &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;steel &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;tropical &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;beautiful &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cellar &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;currant &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;firm &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;herbs &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mango &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;peaches &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;refined &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;spice &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;toasty &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;attractive &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;buttery &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cream &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;everyday &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;harsh &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;lively &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;orange &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;raisins &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;smoky &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;textured &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;bright &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;clove &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dilute &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;gentle &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lacks &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mountain &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;plum &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;salt &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sugary &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;watery &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;apple &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;burnt &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;complexity &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;earthy &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;gorgeous &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;lemon &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;nutmeg &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;power &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;serious &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tannic &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;blackberries &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;classic &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;density &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;future &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;jammy &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;mocha &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pineapples &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rounded &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;structure &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wait &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;austere &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;caramel &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;creamy &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;exotic &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;heavy &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;long &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;overripe &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;raisiny &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;smooth &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;thin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bitter &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;chocolate &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;decent &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fruity &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;impressive &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;minerality &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;perfumed &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ripe &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;steely &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unbalanced &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;black &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cinnamon &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;delicious &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;full &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;intense &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;minerals &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pie &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rough &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;stone &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;vanilla &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;blackberry &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;clean &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;developing &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;generous &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;juicy &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;modest &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pleasant &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;rustic &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;structured &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;warm &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;brisk &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;coffee &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dried &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;golden &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;layers &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;new &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;popcorn &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;salty &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sweet &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;weight &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;beautifully &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;chardonnays &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;currants &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fresh &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;honey &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;melon &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pear &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;refreshing &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;spicy &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tobacco &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;balance &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cassis &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;crème &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;extracted &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;herb &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;long-term &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;packed &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;raspberry &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;soft &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tight &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;apples &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;butter &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;concentrated &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;easy &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;grapefruit &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;licorice &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;oak &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;powerful &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sharp &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tannin &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;black-currant &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;citrus &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;dense &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;full-bodied &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;jam &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;minty &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pineapple &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;round &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;strong &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;vegetal &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;berry &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cherries &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;dark &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;freshness &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hot &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;meyer &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pears &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rich &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;stalky &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;top &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;apricot &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;buttered &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;concentration &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;elegance &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;great &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;light &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;oaky &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pretty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;short &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tart &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='bord_reds80to84+ (Final)' inline='true' name='federated.0qvn6i20c5yblt116tfdu0iy1c43' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1h7oyxb0741sza191j4ee15kvmfi'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation all='true' name='bord_reds80to84+' type='union'>
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='bord_reds80to84' table='[public].[bord_reds80to84]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='bord_reds85to89' table='[public].[bord_reds85to89]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='bord_reds90to94' table='[public].[bord_reds90to94]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='bord_reds95to100' table='[public].[bord_reds95to100]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_cab_80to84' table='[public].[cali_cab_80to84]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_cab_85to89' table='[public].[cali_cab_85to89]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_cab_90to94' table='[public].[cali_cab_90to94]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_cab_95to100' table='[public].[cali_cab_95to100]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_chard_80to84' table='[public].[cali_chard_80to84]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_chard_85to89' table='[public].[cali_chard_85to89]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_chard_90to94' table='[public].[cali_chard_90to94]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='cali_chard_95to100' table='[public].[cali_chard_95to100]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='french_chard_80to84' table='[public].[french_chard_80to84]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='french_chard_85to89' table='[public].[french_chard_85to89]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='french_chard_90to94' table='[public].[french_chard_90to94]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='french_chard_90to941' table='[public].[french_chard_90to94]' type='table' />
          <relation connection='postgres.1h7oyxb0741sza191j4ee15kvmfi' name='french_chard_85to891' table='[public].[french_chard_85to89]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>filename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[filename]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>filename</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>record number 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[record number 1]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>record number 1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>record number 2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[record number 2]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>record number 2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost per point</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cost per point]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>cost per point</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region coordinates </remote-name>
            <remote-type>129</remote-type>
            <local-name>[region coordinates ]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>region coordinates </remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[region latitude]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>region latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[region longitude]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>region longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion coordinates </remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion coordinates ]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion coordinates </remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion latitude]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion latitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion longitude]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion longitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varietal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[varietal]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>varietal</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vintage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vintage]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>vintage</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region / state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region / state]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>region / state</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion lat lon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion lat lon]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion lat lon</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion lat]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion lat</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion lon]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subregion lon</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsubregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subsubregion]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subsubregion</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsubregion lat lon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subsubregion lat lon]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subsubregion lat lon</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsubregion lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subsubregion lat]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subsubregion lat</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsubregion lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subsubregion lon]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>subsubregion lon</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> cost per point </remote-name>
            <remote-type>129</remote-type>
            <local-name>[ cost per point ]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias> cost per point </remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[bord_reds80to84+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Rating (bin)' datatype='integer' name='[Rating (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[rating]' peg='0' size='5' />
      </column>
      <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Cost Per Point' datatype='string' default-role='measure' default-type='ordinal' name='[cost per point]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Designation' datatype='string' name='[designation]' role='dimension' type='nominal' />
      <column caption='Filename' datatype='string' name='[filename]' role='dimension' type='nominal' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
      <column caption='Record Number 1' datatype='real' name='[record number 1]' role='measure' type='quantitative' />
      <column caption='Record Number 2' datatype='real' name='[record number 2]' role='measure' type='quantitative' />
      <column datatype='string' name='[region / state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Region Coordinates' datatype='string' name='[region coordinates ]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Region Latitude' datatype='real' name='[region latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Region Longitude' datatype='real' name='[region longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Subregion Coordinates' datatype='string' name='[subregion coordinates ]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[subregion lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Subregion Latitude' datatype='real' name='[subregion latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[subregion lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Subregion Longitude' datatype='real' name='[subregion longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[subsubregion lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[subsubregion lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
      <column caption='Vintage' datatype='string' default-role='measure' default-type='ordinal' name='[vintage]' role='dimension' type='nominal' />
      <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Rating (bin)]' member='20' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[country]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[varietal]' member='&quot;Bordeaux-style Red Blend&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[country]' />
            <hierarchy name='[Rating (bin)]' />
            <hierarchy name='[varietal]' />
          </order>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, region / state'>
          <field>[country]</field>
          <field>[region / state]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.534091' group-percentage='0.0326705' measure-ordering='alphabetic' measure-percentage='0.433239' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CA_FR_CAB_Chard (Final)' inline='true' name='federated.15xtoqz01tr89313yon6g00ezxay' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0ymprw40vug6uh17r5wah0sjljd1'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0ymprw40vug6uh17r5wah0sjljd1' name='CA_FR_CAB_Chard' table='[public].[CA_FR_CAB_Chard]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>filename</remote-name>
            <remote-type>130</remote-type>
            <local-name>[filename]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>filename</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>record number 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[record number 1]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>record number 1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>record number 2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[record number 2]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>record number 2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country or state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country or state]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>country or state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grape</remote-name>
            <remote-type>130</remote-type>
            <local-name>[grape]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>grape</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating Bucket</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rating Bucket]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>Rating Bucket</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost per point</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost per point]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>cost per point</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region coordinates </remote-name>
            <remote-type>130</remote-type>
            <local-name>[region coordinates ]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region coordinates </remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[region latitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region latitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[region longitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>region longitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion coordinates </remote-name>
            <remote-type>130</remote-type>
            <local-name>[subregion coordinates ]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion coordinates </remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion latitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion latitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[subregion longitude]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>subregion longitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varietal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[varietal]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>varietal</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vintage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[vintage]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>vintage</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[CA_FR_CAB_Chard]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
      <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;France&quot;' value='&quot;Bourgogne-Franche-Comté&quot;' />
        </semantic-values>
      </column>
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Designation' datatype='string' name='[designation]' role='dimension' type='nominal' />
      <column caption='Filename' datatype='string' hidden='true' name='[filename]' role='dimension' type='nominal' />
      <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Record Number 1' datatype='integer' name='[record number 1]' role='measure' type='quantitative' />
      <column caption='Record Number 2' datatype='integer' name='[record number 2]' role='measure' type='quantitative' />
      <column caption='Region Coordinates' datatype='string' name='[region coordinates ]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Region Latitude' datatype='real' name='[region latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Region Longitude' datatype='real' name='[region longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Subregion Coordinates' datatype='string' name='[subregion coordinates ]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Subregion Latitude' datatype='real' name='[subregion latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Subregion Longitude' datatype='real' name='[subregion longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Subregion' datatype='string' name='[subregion]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
      <column caption='Vintage' datatype='string' name='[vintage]' role='dimension' type='nominal' />
      <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
      <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
      <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
      <column-instance column='[region latitude]' derivation='None' name='[none:region latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[region longitude]' derivation='None' name='[none:region longitude:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Country Or State,Grape,Region Latitude,Region Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country or state:nk]' />
          <groupfilter function='level-members' level='[none:grape:nk]' />
          <groupfilter function='level-members' level='[none:region latitude:qk]' />
          <groupfilter function='level-members' level='[none:region longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.514364' measure-ordering='alphabetic' measure-percentage='0.485636' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:grape:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cabernet / Bordeaux Blend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chardonnay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
    <datasource caption='Cab_Board_Predictions (Final)' inline='true' name='federated.16g99tr06pxc501ctgmtx0pju5hh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1nnvoxj189spdd1cwlbyz1a4s16g'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1nnvoxj189spdd1cwlbyz1a4s16g' name='Cab_Board_Predictions_region' table='[public].[Cab_Board_Predictions_region]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Cab_Board_Predictions_region]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Cab_Board_Predictions_region]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Cab_Board_Predictions_region]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_]</local-name>
            <parent-name>[Cab_Board_Predictions_region]</parent-name>
            <remote-alias>predicted_</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Predicted' datatype='real' name='[predicted_]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[subregion]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Anjou&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Anjou Villages Brissac&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Atlantique&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Augusta&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Bergerac&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Blaye Côtes de Bordeaux&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Bordeaux&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Bordeaux Clairet&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Bordeaux Côtes de Francs&quot;' value='&quot;France&quot;' />
        </semantic-values>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.428181' measure-ordering='alphabetic' measure-percentage='0.571819' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Chard_Predictions_region+ (Final)' inline='true' name='federated.113ad830zeqrml1731cxf1u291ks' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.18o7yyo07co75t1csgod719auq1l'>
            <connection authentication='username-password' class='postgres' dbname='Final' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Chard_Predictions_region+' type='union'>
          <relation connection='postgres.18o7yyo07co75t1csgod719auq1l' name='Chard_Predictions_region' table='[public].[Chard_Predictions_region]' type='table' />
          <relation connection='postgres.18o7yyo07co75t1csgod719auq1l' name='US_French_Chardonnay' table='[public].[US_French_Chardonnay]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>predicted_</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_bins</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_bins]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>price_bins</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating_bin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rating_bin]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>rating_bin</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subregion]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>subregion</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsubregion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subsubregion]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>subsubregion</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varietal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[varietal]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>varietal</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vintage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vintage]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>vintage</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Chard_Predictions_region+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Predicted' datatype='real' name='[predicted_]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='region (US French Chardonnay)' datatype='string' name='[region (US_French_Chardonnay)]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='country, State / Country' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.574648' measure-ordering='alphabetic' measure-percentage='0.425352' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France Other&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rhône Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Champagne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loire Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington-Oregon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ile de Beauté&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaujolais&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bins'>
      <table>
        <view>
          <datasources>
            <datasource caption='bord_reds80to84+ (Final)' name='federated.0qvn6i20c5yblt116tfdu0iy1c43' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qvn6i20c5yblt116tfdu0iy1c43'>
            <column aggregation='None' caption='Rating (bin)' datatype='integer' name='[Rating (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[rating]' peg='0' size='5' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Rating (bin)]' derivation='None' name='[none:Rating (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[varietal]' derivation='None' name='[none:varietal:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Rating (bin):ok]' />
              <groupfilter function='member' level='[none:Rating (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:country:nk] / [federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk])</rows>
        <cols>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]</cols>
      </table>
      <simple-id uuid='{B7E122A8-BB3C-4905-8875-4F4F96D57B68}' />
    </worksheet>
    <worksheet name='Bubble'>
      <table>
        <view>
          <datasources>
            <datasource caption='bord_reds80to84+ (Final)' name='federated.0qvn6i20c5yblt116tfdu0iy1c43' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qvn6i20c5yblt116tfdu0iy1c43'>
            <column aggregation='None' caption='Rating (bin)' datatype='integer' name='[Rating (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[rating]' peg='0' size='5' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Rating (bin)]' derivation='None' name='[none:Rating (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[varietal]' derivation='None' name='[none:varietal:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='860' />
            <format attr='width' value='1489' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:price:qk]' />
              <text column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:country:nk]' />
              <text column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]' />
              <color column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9BC4EC00-5168-424D-A3AF-1FE4E4FE8204}' />
    </worksheet>
    <worksheet name='Cost Per Point'>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.15xtoqz01tr89313yon6g00ezxay' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15xtoqz01tr89313yon6g00ezxay'>
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;France&quot;' value='&quot;Bourgogne-Franche-Comté&quot;' />
              </semantic-values>
            </column>
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]'>
            <groupfilter function='level-members' level='[none:country or state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15xtoqz01tr89313yon6g00ezxay].[none:price:qk]' field-type='quantitative' major-origin='0' major-spacing='5' max='400' min='4' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]' />
              <size column='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:cost per point:qk]' />
              <lod column='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:cost per point:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk] * [federated.15xtoqz01tr89313yon6g00ezxay].[none:rating:qk])</rows>
        <cols>([federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk] * [federated.15xtoqz01tr89313yon6g00ezxay].[none:price:qk])</cols>
      </table>
      <simple-id uuid='{9E96C267-5057-41A8-BFAB-B38BA4D08905}' />
    </worksheet>
    <worksheet name='Cost Per Point (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.15xtoqz01tr89313yon6g00ezxay' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15xtoqz01tr89313yon6g00ezxay'>
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column-instance column='[cost per point]' derivation='Avg' name='[avg:cost per point:qk]' pivot='key' type='quantitative' />
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;France&quot;' value='&quot;Bourgogne-Franche-Comté&quot;' />
              </semantic-values>
            </column>
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:cost per point:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:Rating Bucket:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15xtoqz01tr89313yon6g00ezxay].[avg:cost per point:qk]</rows>
        <cols>([federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk] / ([federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk] / [federated.15xtoqz01tr89313yon6g00ezxay].[none:Rating Bucket:nk]))</cols>
      </table>
      <simple-id uuid='{03C7EC97-56A6-4658-851F-848C77AAB132}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.15xtoqz01tr89313yon6g00ezxay' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15xtoqz01tr89313yon6g00ezxay'>
            <column caption='Cost Per Point' datatype='real' name='[cost per point]' role='measure' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;France&quot;' value='&quot;Bourgogne-Franche-Comté&quot;' />
              </semantic-values>
            </column>
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[region latitude]' derivation='None' name='[none:region latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region longitude]' derivation='None' name='[none:region longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Region Latitude' datatype='real' name='[region latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Region Longitude' datatype='real' name='[region longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[cost per point]' derivation='Sum' name='[sum:cost per point:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15xtoqz01tr89313yon6g00ezxay].[sum:cost per point:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15xtoqz01tr89313yon6g00ezxay].[Exclusions (Country Or State,Grape,Region Latitude,Region Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:country or state:nk]' />
                <groupfilter function='level-members' level='[none:grape:nk]' />
                <groupfilter function='level-members' level='[none:region latitude:qk]' />
                <groupfilter function='level-members' level='[none:region longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:country or state:nk]' member='&quot;California&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:grape:nk]' member='&quot;Cabernet / Bordeaux Blend&quot;' />
                      <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:region latitude:qk]' member='33.691003000000002' />
                      <groupfilter function='member' level='[none:region longitude:qk]' member='-117.8889767' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:country or state:nk]' member='&quot;France&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:grape:nk]' member='&quot;Chardonnay&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:region latitude:qk]' member='34.553128399999999' />
                      <groupfilter function='member' level='[none:region longitude:qk]' member='18.0480105' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]</column>
            <column>[federated.15xtoqz01tr89313yon6g00ezxay].[Exclusions (Country Or State,Grape,Region Latitude,Region Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]' />
              <text column='[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]' />
              <lod column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region latitude:qk]</rows>
        <cols>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region longitude:qk]</cols>
      </table>
      <simple-id uuid='{E87742EB-23EE-44DF-A6D8-B053497ABC58}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='top_50_words (Final)' name='federated.1bphhig1yki3ei1axah5u0dcgfhy' />
          </datasources>
          <datasource-dependencies datasource='federated.1bphhig1yki3ei1axah5u0dcgfhy'>
            <column caption='Descriptor' datatype='string' name='[Descriptor ]' role='dimension' type='nominal' />
            <column datatype='real' name='[How Often Descriptor Appears]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Wine]' role='dimension' type='nominal' />
            <column-instance column='[Descriptor ]' derivation='None' name='[none:Descriptor :nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Wine]' derivation='None' name='[none:Type of Wine:nk]' pivot='key' type='nominal' />
            <column-instance column='[How Often Descriptor Appears]' derivation='Sum' name='[sum:How Often Descriptor Appears:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([How Often Descriptor Appears])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;acids &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;apple &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;apples &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;apricot &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;astringent &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;attractive &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;austere &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;balance &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;balanced &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;beautiful &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;beautifully &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;berry &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;big &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;bitter &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;black &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;black-currant &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;blackberries &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;blackberry &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;bright &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;brisk &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;brûlée &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;burnt &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;butter &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;buttered &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;butterscotch &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;buttery &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;caramel &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cassis &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cedar &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cellar &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;chardonnays &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cherries &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cherry &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;chocolate &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cinnamon &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;citrus &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;classic &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;clean &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;clove &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;coffee &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;complex &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;complexity &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;concentrated &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;concentration &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;considerable &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;cream &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;creamy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;crème &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;crisp &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;currant &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;currants &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;dark &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;decade &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;decent &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;delicious &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;dense &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;density &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;developing &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;dilute &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;dried &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;dry &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;earthy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;easy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;elegance &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;elegant &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;everyday &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;exotic &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;extracted &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;extraction &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;firm &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;fresh &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;freshness &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;fruitiness &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;fruity &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;full &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;full-bodied &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;future &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;generous &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;gentle &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;golden &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;good &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;gorgeous &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;grapefruit &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;great &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;green &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;harsh &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;heavy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;herb &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;herbal &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;herbs &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;honey &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;hot &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;huge &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;impressive &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;intense &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;jam &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;jammy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;juicy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;lacks &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;layers &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;lean &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;lemon &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;licorice &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;light &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;lime &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;lively &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;long &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;long-term &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;lush &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;mango &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;melon &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;meyer &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;mineral &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;minerality &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;minerals &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;minty &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;mocha &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;modest &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;mountain &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;new &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;nice &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;nutmeg &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;oak &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;oaky &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;opulent &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;orange &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;overripe &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;packed &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;peach &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;peaches &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pear &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pears &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pepper &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;perfumed &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pie &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pineapple &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pineapples &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pleasant &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;plum &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;popcorn &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;potential &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;power &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;powerful &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pretty &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;pure &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;raisins &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;raisiny &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;raspberry &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;ready &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;refined &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;refreshing &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;rich &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;richness &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;ripe &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;rough &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;round &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;rounded &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;rustic &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;salt &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;salty &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;sea &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;serious &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;sharp &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;short &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;simple &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;smoky &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;smooth &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;soft &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;solid &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;spice &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;spicy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;stalky &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;steel &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;steely &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;stone &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;strong &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;structure &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;structured &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;sugary &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;sweet &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tangy &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tannic &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tannin &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tart &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;taut &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;textured &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;thin &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tight &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;toast &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;toasty &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tobacco &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;top &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;tropical &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;unbalanced &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;vanilla &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;vegetal &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;wait &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;warm &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;watery &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;weight &quot;' />
                  <groupfilter function='member' level='[none:Descriptor :nk]' member='&quot;young &quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Type of Wine:nk]'>
            <groupfilter function='member' level='[none:Type of Wine:nk]' member='&quot;French Chardonnay - All&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[sum:How Often Descriptor Appears:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]</column>
            <column>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Type of Wine:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[sum:How Often Descriptor Appears:qk]' value='p0%' />
            <format attr='width' field='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]' value='184' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]' />
              <text column='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]' />
              <text column='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[sum:How Often Descriptor Appears:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[sum:How Often Descriptor Appears:qk]</rows>
        <cols>([federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Type of Wine:nk] / [federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk])</cols>
      </table>
      <simple-id uuid='{AA77E60A-60FD-4072-90BB-37D8F1DA8F1E}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chard_Predictions_region+ (Final)' name='federated.113ad830zeqrml1731cxf1u291ks' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.113ad830zeqrml1731cxf1u291ks'>
            <column-instance column='[predicted_]' derivation='Avg' name='[avg:predicted_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Predicted' datatype='real' name='[predicted_]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.113ad830zeqrml1731cxf1u291ks].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.113ad830zeqrml1731cxf1u291ks].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.113ad830zeqrml1731cxf1u291ks].[avg:predicted_:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.113ad830zeqrml1731cxf1u291ks].[avg:price:qk] + [federated.113ad830zeqrml1731cxf1u291ks].[avg:predicted_:qk])</rows>
        <cols>[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]</cols>
      </table>
      <simple-id uuid='{9C8BDB87-7EA8-4613-B395-4C78BC4CF568}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='bord_reds80to84+ (Final)' name='federated.0qvn6i20c5yblt116tfdu0iy1c43' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qvn6i20c5yblt116tfdu0iy1c43'>
            <column aggregation='None' caption='Rating (bin)' datatype='integer' name='[Rating (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[rating]' peg='0' size='5' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Rating (bin)]' derivation='None' name='[none:Rating (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[varietal]' derivation='None' name='[none:varietal:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='Varietal' datatype='string' name='[varietal]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Rating (bin):ok]' />
              <groupfilter function='member' level='[none:Rating (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:price:qk]' value='40' />
            <encoding attr='space' class='0' field='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:rating:qk]' field-type='quantitative' max='100.0' min='80.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]' value='136' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:price:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00eb00</color>
                <color>#15e915</color>
                <color>#2ae72a</color>
                <color>#3ee63e</color>
                <color>#53e453</color>
                <color>#67e267</color>
                <color>#7ae17a</color>
                <color>#8edf8e</color>
                <color>#a1dda1</color>
                <color>#b4dcb4</color>
                <color>#c6dac6</color>
                <color>#d9d9d9</color>
                <color>#d4c1c1</color>
                <color>#d0aaaa</color>
                <color>#cc9494</color>
                <color>#c77f7f</color>
                <color>#c36a6a</color>
                <color>#bf5656</color>
                <color>#bb4444</color>
                <color>#b63131</color>
                <color>#b22020</color>
                <color>#ae0f0f</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:rating:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:country:nk]' />
              <color column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:rating:qk]' />
              <lod column='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='446' />
                <format attr='maxwidth' value='446' />
                <format attr='minheight' value='343' />
                <format attr='maxheight' value='343' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:price:qk]</rows>
        <cols>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:rating:qk]</cols>
      </table>
      <simple-id uuid='{F2640294-B5F5-46CD-8C37-FC5F6EEDF6B9}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.15xtoqz01tr89313yon6g00ezxay' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15xtoqz01tr89313yon6g00ezxay'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;France&quot;' value='&quot;Bourgogne-Franche-Comté&quot;' />
              </semantic-values>
            </column>
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15xtoqz01tr89313yon6g00ezxay].[none:rating:qk]' field-type='quantitative' max='110' min='80' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]' />
              <text column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15xtoqz01tr89313yon6g00ezxay].[avg:price:qk]</rows>
        <cols>[federated.15xtoqz01tr89313yon6g00ezxay].[none:rating:qk]</cols>
      </table>
      <simple-id uuid='{84F444F2-7820-4E16-BD19-1C9EA0F041EE}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='CA_FR_CAB_Chard (Final)' name='federated.15xtoqz01tr89313yon6g00ezxay' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15xtoqz01tr89313yon6g00ezxay'>
            <column datatype='string' name='[Rating Bucket]' role='dimension' type='nominal' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country Or State' datatype='string' name='[country or state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;France&quot;' value='&quot;Bourgogne-Franche-Comté&quot;' />
              </semantic-values>
            </column>
            <column caption='Grape' datatype='string' name='[grape]' role='dimension' type='nominal' />
            <column-instance column='[Rating Bucket]' derivation='None' name='[none:Rating Bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[country or state]' derivation='None' name='[none:country or state:nk]' pivot='key' type='nominal' />
            <column-instance column='[grape]' derivation='None' name='[none:grape:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]'>
            <groupfilter function='level-members' level='[none:country or state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:price:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00ff00</color>
                <color>#29f829</color>
                <color>#50f250</color>
                <color>#76ec76</color>
                <color>#99e599</color>
                <color>#badfba</color>
                <color>#d9d9d9</color>
                <color>#d1aeae</color>
                <color>#c98686</color>
                <color>#c16060</color>
                <color>#b93d3d</color>
                <color>#b11d1d</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:price:qk]' />
              <text column='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk] / [federated.15xtoqz01tr89313yon6g00ezxay].[none:Rating Bucket:nk])</rows>
        <cols>[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]</cols>
      </table>
      <simple-id uuid='{46FC8C26-0B3B-4FD3-B039-34A3AF556797}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Cab_Board_Predictions (Final)' name='federated.16g99tr06pxc501ctgmtx0pju5hh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16g99tr06pxc501ctgmtx0pju5hh'>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16g99tr06pxc501ctgmtx0pju5hh].[Longitude (generated)]' field-type='quantitative' max='15504861.749636766' min='-37187470.793335952' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16g99tr06pxc501ctgmtx0pju5hh].[Latitude (generated)]' field-type='quantitative' max='23087422.641919553' min='-3863408.391755946' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.16g99tr06pxc501ctgmtx0pju5hh].[none:region:nk]' />
              <geometry column='[federated.16g99tr06pxc501ctgmtx0pju5hh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16g99tr06pxc501ctgmtx0pju5hh].[Latitude (generated)]</rows>
        <cols>[federated.16g99tr06pxc501ctgmtx0pju5hh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FDEE0F65-3806-410C-BD9E-9ED6BA2BA891}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Bins' w='53000' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='5' name='Bubble' w='29400' x='53800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='58000' id='9' name='Bubble' pane-specification-id='0' param='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='28' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Bins' w='53000' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='5' is-fixed='true' name='Bubble' w='29400' x='53800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='58000' id='9' name='Bubble' pane-specification-id='0' param='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F8FA765F-1B4A-49AD-A019-9C087C52907B}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='Bins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[cnt:cost per point:ok]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:country:nk]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91BC31E5-7DF2-4E42-8E78-C418FBAD93FB}' />
    </window>
    <window class='worksheet' name='Bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[cnt:cost per point:ok]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin) 1:ok]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:Rating (bin):ok]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DA1A956-AEE0-4A49-A6E4-C463A0320E00}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:rating:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:country:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[avg:rating:qk]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:country:nk]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:designation:nk]</field>
            <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF6F5A98-696D-47BC-9E64-6FC03F553513}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bins' />
        <viewpoint name='Bubble'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qvn6i20c5yblt116tfdu0iy1c43].[none:varietal:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B48A25D3-D743-4045-A488-D05EAB187C5E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3056F99D-66FA-4996-9A10-507BB06114F4}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region latitude:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F52ACC7D-446D-4CA6-8DEA-6FE96949079F}' />
    </window>
    <window class='worksheet' name='Cost Per Point'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:cost per point:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:price:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:rating:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region latitude:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A3A3D4F-3671-45F4-B8DC-51CE3FC0237B}' />
    </window>
    <window class='worksheet' name='Cost Per Point (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.15xtoqz01tr89313yon6g00ezxay].[none:Rating Bucket:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[:Measure Names]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:Rating Bucket:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:price:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:rating:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region latitude:qk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:region longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2E3799D-D4BC-4B28-B842-AB1BF8647B72}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15xtoqz01tr89313yon6g00ezxay].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:country or state:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:grape:nk]</field>
            <field>[federated.15xtoqz01tr89313yon6g00ezxay].[none:price:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E88158AD-980E-4328-A9E8-0CF4A9A5D851}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16g99tr06pxc501ctgmtx0pju5hh].[:Measure Names]</field>
            <field>[federated.16g99tr06pxc501ctgmtx0pju5hh].[none:rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B715C7A-F38B-46B1-A26E-35C8B8E31559}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Descriptor :nk]</field>
            <field>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:How Often Descriptor Appears:nk]</field>
            <field>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[none:Type of Wine:nk]</field>
            <field>[federated.1bphhig1yki3ei1axah5u0dcgfhy].[sum:How Often Descriptor Appears:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{023BC586-3F16-4A24-AA09-118AC9501681}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113ad830zeqrml1731cxf1u291ks].[none:Number of Records:qk]</field>
            <field>[federated.113ad830zeqrml1731cxf1u291ks].[none:region (US_French_Chardonnay):nk]</field>
            <field>[federated.113ad830zeqrml1731cxf1u291ks].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE86BD7E-DBDB-442C-9213-F09ABEB93A5C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bins' width='192'>
      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
      xSEIgvB/AqBTaJW8HtwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bubble' width='192'>
      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
      XML8agAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cost Per Point' width='192'>
      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
      lsb/B0Bjk0B3QLeCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cost Per Point (2)' width='192'>
      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
      tGC1zXL6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      KZTKda5fOkOqZsVn03B6o+SuXEQXLJQqCk89dWrrM/TboKUEZ5dLFNT5jiZAq0/wZnrutlRk
      i6XxvvCH3itsvRPsdhOqC3j370fWqzgbAkG/G13TqcomyG5czuJWD6NtWkrwsWPHKOtSR7at
      PsGb6bnbUpG9kr4r+/U+KrpKcJcNdJXgh8ROUl67SnD77CYleMuX3bVsirnVNFevXl13PLl6
      u+hVudwshrWyOMdSInXLLkvtPu/dstsp5DOr3JiYYn56nLfOX37Uw+nSBtuqBI9fPU+6bsUr
      azg8EXLXrqALFioVhd7eOCYW+uMhXn3x+/h8UVhdoFrRUXWBqMeKIVjRDIF6fgWrJ4qu65w6
      uXNCBh4kJ7jLo2FblWCbXsOhCQS8LnRdp1a+5QQ7ivT09pBPJVhKpOgbGsVhs1GoKcQHPVRV
      g5D/9jZp0WvH6vRTLeW3evgd8SA5wV0eDV0luMsGNisYKpqBohlIFgG7VUQQhIc8sodPVwnu
      8kBousn1ZJWpTI1C/faun90qMhy0cSTuwiXv3F2lLa8N2okSvDQ/jWF1MdAbo5bJQCjEuxU1
      KZdKuD1WLp6bZN+RQzht9/6it6dLZFMJPtRvp+Y6zGi8ky6RTdugQ+g4n/hRka02+NFkgbJ6
      7+1uqyjwzJCH0dDWFDJ7UHaMEtzf34OJlcHeCC99/zv4fXFYmaVaNlB0gZjXiilINAyBWm4J
      yRtD13WeOjWGquoszk3ikCycPXeFfcePoFQVXJJJuHd4nf+wpdxSguPuOjOduie3bHOplY5D
      qR8F+ZrGCzdzqPq7j1UzTF6ZaQqdd04CU9MpXptFL9dw7e3HFn00tZB2jBLc19dHbnWZheUk
      A8NjOBx28pU6PSMeqopJONC8iQUg77MjuQJUillA5uCRQwgoyBY4cEghFInjsEC1lNvqj7eO
      lhJcd0CdOjDcse1wzNdxPvF2Y5omr0wX7nvz38npuRIxj4xLtqDXVWb+v29QX0o3XxQE+n7+
      eQJPHNiiEd+brhLcZQP3U4LncnVemuq8+ciBqIOnBr0kv3+G5Atn1r0m2iQOfPlLiHJn4ScP
      SlcJ7rKB+ynBs9nN7e7NZhWeHDCpr2Q3vGYoDdRsiZS7SLqewC15GfHswypaMU2D6Ut/wsK1
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      IC8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      /wMd7sMii3RNWAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dyZMj2XnYfy9XJDITS629zUoOqRnJkkiGpAjJkhU+SDcffPZf57NPPinC
      CtmyHJJliiIpDjlDDmfrvasKOxK55/MBmehEFlBbV3U3CvmLmJhqFJYs5Pve+/ZPTKdTqWka
      NTXbiKZpGqZpvunrqKl5Iyhv+gJqat4ktQDUbDW1ANRsNbUA1Gw1tQDUbDW1ANRsNbUA1Gw1
      tQDUbDW1ANRsNbUA1Gw1tQDUbDW1ANRsNbUA1Gw1tQDUbDW1ANRsNbUA1Gw1tQDUbDW1ANRs
      NbUA1Gw1tQDUbDUb2Q6iP5nw6TffvOnLqLkF1CdAzVZTC0DNVlMLQM1WUwtAzVZTC0DNVlML
      QM1WUwtAzVZTC0DNVlMLQM1WUwtAzVZTC0DNVlMLQM1WUwtAzVZTC0DNVlMLQM1WUwtAzVZT
      C0DNVlMLQM1WUwtAzVZTC0DNVlMLQM1WUwtAzVZTC0DNVlMLQM1WUwtAzVZz6wTAUNWlfzd0
      /Q1dSc0mcOsEwMwXvK6qvLuzw912+w1fUc3bzK0TgEkQAPDe7i4ty6JpGHSbzTd8VTVvK7dO
      AAqklAAIIejUAlCzhlspALZhLFQhgLHvv8GrqXlbMVR1M9ujn0fTNFGEIEoSRr6PH8dv+pJq
      3kIsw7h9J4CmKAig73mcTKc0DYN3dnZo6Dqacuv+3JpLcthq0TQMAJq3UQAk8z/MjyLaloVt
      mqhC8E63y2Gr9aYvr+YNczKdLn6WUt4+AUizjG96PeI0xTZNABRFwdR15Bu+tpo3T5plzKII
      gKPJ5PYJQME0DBd/aEGY2wKtRgMhxJu4rJrXTNuyaFnWyt/dyhOgTG86JUnTxb/jNKVpGDzY
      2cHJT4ea24sA9l2X+50OuqpS3fIkt9QNWjDyfT5//pwng8HCE+Q2GihC8O7OztqdoeZ2IIFv
      ez2SNOW7+/vsOs6p59xqASgYzGZ8eXTEOAhwGw1gHiB70Om84SuruS6K3b5T2dTiNKXneSiK
      woHrsu+66KrK9w4PMTVtOwSgwFDVpeQ4r2Ij1GwmxeK3DQMrd3EWtC2LtmWRZhlCCBQhkFKi
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
